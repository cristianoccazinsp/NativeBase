{"version":3,"sources":["../../../../src/theme/shoutem/StyleProvider.js"],"names":["StyleProvider","props","context","state","theme","createTheme","nextProps","style","setState","Theme","children","Children","only","React","Component","propTypes","PropTypes","element","isRequired","object","defaultProps","childContextTypes","ThemeShape"],"mappings":"6nBAAA,qDACA,6DACA,uD,qtDAKqBA,CAAAA,a,0HAcnB,uBAAYC,KAAZ,CAAmBC,OAAnB,CAA4B,4DAC1B,uBAAMD,KAAN,CAAaC,OAAb,EACA,MAAKC,KAAL,CAAa,CACXC,KAAK,CAAE,MAAKC,WAAL,CAAiBJ,KAAjB,CADI,CAAb,CAF0B,aAK3B,C,sEAED,0BAAkB,CAChB,MAAO,CACLG,KAAK,CAAE,KAAKD,KAAL,CAAWC,KADb,CAAP,CAGD,C,gDAED,0CAAiCE,SAAjC,CAA4C,CAC1C,GAAIA,SAAS,CAACC,KAAV,GAAoB,KAAKN,KAAL,CAAWM,KAAnC,CAA0C,CACxC,KAAKC,QAAL,CAAc,CACZJ,KAAK,CAAE,KAAKC,WAAL,CAAiBC,SAAjB,CADK,CAAd,EAGD,CACF,C,2BAED,qBAAYL,KAAZ,CAAmB,CACjB,MAAO,IAAIQ,eAAJ,CAAUR,KAAK,CAACM,KAAhB,CAAP,CACD,C,sBAED,iBAAS,CACP,GAAOG,CAAAA,QAAP,CAAmB,KAAKT,KAAxB,CAAOS,QAAP,CAEA,MAAOC,iBAASC,IAAT,CAAcF,QAAd,CAAP,CACD,C,2BA3CwCG,eAAMC,S,gCAA5Bd,a,CACZe,S,CAAY,CACjBL,QAAQ,CAAEM,mBAAUC,OAAV,CAAkBC,UADX,CAEjBX,KAAK,CAAES,mBAAUG,MAFA,C,CADAnB,a,CAMZoB,Y,CAAe,CACpBb,KAAK,CAAE,EADa,C,CANHP,a,CAUZqB,iB,CAAoB,CACzBjB,KAAK,CAAEkB,kBAAWJ,UADO,C","sourcesContent":["import React, {Children} from 'react';\nimport PropTypes from 'prop-types';\nimport Theme, {ThemeShape} from './Theme';\n\n/**\n *  Provides a theme to child components trough context.\n */\nexport default class StyleProvider extends React.Component {\n  static propTypes = {\n    children: PropTypes.element.isRequired,\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    style: {},\n  };\n\n  static childContextTypes = {\n    theme: ThemeShape.isRequired,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      theme: this.createTheme(props),\n    };\n  }\n\n  getChildContext() {\n    return {\n      theme: this.state.theme,\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.style !== this.props.style) {\n      this.setState({\n        theme: this.createTheme(nextProps),\n      });\n    }\n  }\n\n  createTheme(props) {\n    return new Theme(props.style);\n  }\n\n  render() {\n    const {children} = this.props;\n\n    return Children.only(children);\n  }\n}\n"],"file":"StyleProvider.js"}