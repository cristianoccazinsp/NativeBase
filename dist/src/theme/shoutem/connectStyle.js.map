{"version":3,"sources":["../../../../src/theme/shoutem/connectStyle.js"],"names":["themeCache","clearThemeCache","throwConnectStyleError","errorMessage","componentDisplayName","Error","getTheme","context","theme","Theme","getDefaultTheme","isStyleVariant","propertyName","test","isChildStyle","getConcreteStyle","style","_","pickBy","value","key","Object","entries","obj","ownProps","keys","i","length","resArray","Array","componentStyleName","componentStyle","mapPropsToStyleNames","options","getComponentDisplayName","WrappedComponent","displayName","name","wrapWithStyledComponent","isPlainObject","isString","StyledComponent","props","styleNames","getStyleNames","finalStyle","getFinalStyle","setWrappedInstance","bind","resolveConnectedComponentStyle","state","addedProps","resolveAddedProps","resolvedStyle","parentPath","getOrSetStylesInCache","resolveStyle","concreteStyle","isArray","styleNamesArr","push","getParentPath","nextProps","nextContext","shouldRebuildStyle","setState","nativeProps","wrappedInstance","setNativeProps","component","_root","isEqual","styleName","hasStyleNameChanged","split","uniq","withRef","ref","path","cacheKey","join","parentStyle","themeStyle","createComponentStyle","resolveStyleNames","React","Component","contextTypes","ThemeShape","PropTypes","array","childContextTypes","propTypes","oneOfType","object","number","string","virtual","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistStatics from 'hoist-non-react-statics';\nimport * as _ from 'lodash';\n\nimport Theme, {ThemeShape} from './Theme';\nimport {resolveComponentStyle} from './resolveComponentStyle';\n\nlet themeCache = {};\n\n/**\n * clear theme cache\n * @export\n */\nexport function clearThemeCache() {\n  themeCache = {};\n}\n\n/**\n * Formats and throws an error when connecting component style with the theme.\n *\n * @param errorMessage The error message.\n * @param componentDisplayName The name of the component that is being connected.\n */\nfunction throwConnectStyleError(errorMessage, componentDisplayName) {\n  throw Error(\n    `${errorMessage} - when connecting ${componentDisplayName} component to style.`,\n  );\n}\n\n/**\n * Returns the theme object from the provided context,\n * or an empty theme if the context doesn't contain a theme.\n *\n * @param context The React component context.\n * @returns {Theme} The Theme object.\n */\nfunction getTheme(context) {\n  // Fallback to a default theme if the component isn't\n  // rendered in a StyleProvider.\n  return context.theme || Theme.getDefaultTheme();\n}\n\n/**\n * Matches any style properties that represent component style variants.\n * Those styles can be applied to the component by using the styleName\n * prop. All style variant property names must start with a single '.'\n * character, e.g., '.variant'.\n *\n * @param propertyName The style property name.\n * @returns {boolean} True if the style property represents a component variant, false otherwise.\n */\nfunction isStyleVariant(propertyName) {\n  return /^\\./.test(propertyName);\n}\n\n/**\n * Matches any style properties that represent style rules that target the\n * component children. Those styles can have two formats, they can either\n * target the components by component name ('shoutem.ui.Text'), or by component\n * name and variant ('shoutem.ui.Text.line-through'). Beside specifying the\n * component name, those styles can also target any component by using the\n * '*' wildcard ('*', or '*.line-through'). The rule to identify those styles is\n * that they have to contain a '.' character in their name or be a '*'.\n *\n * @param propertyName The style property name.\n * @returns {boolean} True if the style property represents a child style, false otherwise.\n */\nfunction isChildStyle(propertyName) {\n  return /(^[^.].*\\.)|^\\*$/.test(propertyName);\n}\n\nfunction getConcreteStyle(style) {\n  return _.pickBy(style, (value, key) => {\n    return !isStyleVariant(key) && !isChildStyle(key);\n  });\n}\n\n// polyfill this methid in case it is not availablle\nif (!Object.entries) {\n  Object.entries = function (obj) {\n    var ownProps = Object.keys(obj),\n      i = ownProps.length,\n      resArray = new Array(i); // preallocate the Array\n    while (i--) {\n      resArray[i] = [ownProps[i], obj[ownProps[i]]];\n    }\n\n    return resArray;\n  };\n}\n\n/**\n * Resolves the final component style by using the theme style, if available and\n * merging it with the style provided directly through the style prop, and style\n * variants applied through the styleName prop.\n *\n * @param componentStyleName The component name that will be used\n * to target this component in style rules.\n * @param componentStyle The default component style.\n * @param mapPropsToStyleNames Pure function to customize styleNames depending on props.\n * @param options The additional connectStyle options\n * @param options.virtual The default value of the virtual prop\n * @param options.withRef Create component ref with addedProps; if true, ref name is wrappedInstance\n * @returns {StyledComponent} The new component that will handle\n * the styling of the wrapped component.\n */\nexport default (\n  componentStyleName,\n  componentStyle = {},\n  mapPropsToStyleNames,\n  options = {},\n) => {\n  function getComponentDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  }\n\n  return function wrapWithStyledComponent(WrappedComponent) {\n    const componentDisplayName = getComponentDisplayName(WrappedComponent);\n\n    if (!_.isPlainObject(componentStyle)) {\n      throwConnectStyleError(\n        'Component style must be plain object',\n        componentDisplayName,\n      );\n    }\n\n    if (!_.isString(componentStyleName)) {\n      throwConnectStyleError(\n        'Component Style Name must be string',\n        componentDisplayName,\n      );\n    }\n\n    class StyledComponent extends React.Component {\n      static contextTypes = {\n        theme: ThemeShape,\n        // The style inherited from the parent\n        // parentStyle: PropTypes.object,\n        parentPath: PropTypes.array,\n      };\n\n      static childContextTypes = {\n        // Provide the parent style to child components\n        // parentStyle: PropTypes.object,\n        // resolveStyle: PropTypes.func,\n        parentPath: PropTypes.array,\n      };\n\n      static propTypes = {\n        // Element style that overrides any other style of the component\n        style: PropTypes.oneOfType([\n          PropTypes.object,\n          PropTypes.number,\n          PropTypes.array,\n        ]),\n        // The style variant names to apply to this component,\n        // multiple variants may be separated with a space character\n        styleName: PropTypes.string,\n        // Virtual elements will propagate the parent\n        // style to their children, i.e., the children\n        // will behave as they are placed directly below\n        // the parent of a virtual element.\n        virtual: PropTypes.bool,\n      };\n\n      static defaultProps = {\n        virtual: options.virtual,\n      };\n\n      static displayName = `Styled(${componentDisplayName})`;\n      static WrappedComponent = WrappedComponent;\n\n      constructor(props, context) {\n        super(props, context);\n        // console.log(context.parentPath);\n        const styleNames = this.getStyleNames(props);\n        const style = props.style;\n\n        const finalStyle = this.getFinalStyle(\n          props,\n          context,\n          style,\n          styleNames,\n        );\n\n        this.setWrappedInstance = this.setWrappedInstance.bind(this);\n        this.resolveConnectedComponentStyle =\n          this.resolveConnectedComponentStyle.bind(this);\n        this.state = {\n          style: finalStyle,\n          // AddedProps are additional WrappedComponent props\n          // Usually they are set trough alternative ways,\n          // such as theme style, or trough options\n          addedProps: this.resolveAddedProps(),\n          styleNames,\n        };\n      }\n\n      getFinalStyle(props, context, style, styleNames) {\n        let resolvedStyle = {};\n        if (context.parentPath) {\n          resolvedStyle = this.getOrSetStylesInCache(\n            context,\n            props,\n            styleNames,\n            [...context.parentPath, componentStyleName, ...styleNames],\n          );\n        } else {\n          resolvedStyle = this.resolveStyle(context, props, styleNames);\n          themeCache[componentStyleName] = resolvedStyle;\n        }\n\n        const concreteStyle = getConcreteStyle(\n          Object.assign({}, resolvedStyle),\n        );\n\n        if (_.isArray(style)) {\n          return [concreteStyle, ...style];\n        }\n\n        if (typeof style === 'number' || typeof style === 'object') {\n          return [concreteStyle, style];\n        }\n\n        return concreteStyle;\n      }\n\n      getStyleNames(props) {\n        let styleNamesArr = [];\n        for (const [key, value] of Object.entries(props)) {\n          if (typeof value !== 'object' && value === true) {\n            styleNamesArr.push('.' + key);\n          }\n        }\n\n        return styleNamesArr;\n      }\n\n      getParentPath() {\n        if (!this.context.parentPath) {\n          return [componentStyleName];\n        } else {\n          return [\n            ...this.context.parentPath,\n            componentStyleName,\n            ...this.getStyleNames(this.props),\n          ];\n        }\n      }\n\n      getChildContext() {\n        return {\n          // parentStyle: this.props.virtual ?\n          //   this.context.parentStyle :\n          //   this.state.childrenStyle,\n          // resolveStyle: this.resolveConnectedComponentStyle,\n          parentPath: this.getParentPath(),\n        };\n      }\n\n      UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\n        const styleNames = this.getStyleNames(nextProps);\n        const style = nextProps.style;\n        if (this.shouldRebuildStyle(nextProps, nextContext, styleNames)) {\n          const finalStyle = this.getFinalStyle(\n            nextProps,\n            nextContext,\n            style,\n            styleNames,\n          );\n\n          this.setState({\n            style: finalStyle,\n            // childrenStyle: resolvedStyle.childrenStyle,\n            styleNames,\n          });\n        }\n      }\n\n      setNativeProps(nativeProps) {\n        if (this.wrappedInstance.setNativeProps) {\n          this.wrappedInstance.setNativeProps(nativeProps);\n        }\n      }\n\n      setWrappedInstance(component) {\n        if (component && component._root) {\n          this._root = component._root;\n        } else {\n          this._root = component;\n        }\n        this.wrappedInstance = this._root;\n      }\n\n      hasStyleNameChanged(nextProps, styleNames) {\n        return (\n          mapPropsToStyleNames &&\n          this.props !== nextProps &&\n          // Even though props did change here,\n          // it doesn't necessary means changed props are those which affect styleName\n          !_.isEqual(this.state.styleNames, styleNames)\n        );\n      }\n\n      shouldRebuildStyle(nextProps, nextContext, styleNames) {\n        return (\n          nextProps.style !== this.props.style ||\n          nextProps.styleName !== this.props.styleName ||\n          nextContext.theme !== this.context.theme ||\n          !_.isEqual(nextContext.parentPath, this.context.parentPath) ||\n          this.hasStyleNameChanged(nextProps, styleNames)\n        );\n      }\n\n      resolveStyleNames(props) {\n        const {styleName} = props;\n        const styleNames = styleName ? styleName.split(/\\s/g) : [];\n\n        if (!mapPropsToStyleNames) {\n          return styleNames;\n        }\n\n        // We only want to keep the unique style names\n        return _.uniq(mapPropsToStyleNames(styleNames, props));\n      }\n\n      resolveAddedProps() {\n        const addedProps = {};\n        if (options.withRef) {\n          addedProps.ref = 'wrappedInstance';\n        }\n        return addedProps;\n      }\n\n      getOrSetStylesInCache(context, props, styleNames, path) {\n        const cacheKey = path.join('>');\n        if (themeCache && themeCache[cacheKey]) {\n          return themeCache[cacheKey];\n        } else {\n          const resolvedStyle = this.resolveStyle(context, props, styleNames);\n          themeCache[cacheKey] = resolvedStyle;\n          return resolvedStyle;\n        }\n      }\n\n      resolveStyle(context, props, styleNames) {\n        let parentStyle = {};\n\n        const theme = getTheme(context);\n        const themeStyle = theme.createComponentStyle(\n          componentStyleName,\n          componentStyle,\n        );\n\n        if (context.parentPath) {\n          parentStyle = themeCache[context.parentPath.join('>')];\n        } else {\n          parentStyle = resolveComponentStyle(\n            componentStyleName,\n            styleNames,\n            themeStyle,\n            parentStyle,\n          );\n        }\n\n        return resolveComponentStyle(\n          componentStyleName,\n          styleNames,\n          themeStyle,\n          parentStyle,\n        );\n      }\n\n      /**\n       * A helper function provided to child components that enables\n       * them to resolve their style for any set of prop values.\n       *\n       * @param props The component props to use to resolve the style values.\n       * @returns {*} The resolved component style.\n       */\n      resolveConnectedComponentStyle(props) {\n        const styleNames = this.resolveStyleNames(props);\n        return this.resolveStyle(this.context, props, styleNames)\n          .componentStyle;\n      }\n\n      render() {\n        // console.log('themeCache', themeCache);\n\n        // if(componentStyleName == 'NativeBase.Text') {\n        //   console.log(this.state.style);\n        //   console.log(themeCache);\n        // }\n\n        const {addedProps, style} = this.state;\n        return (\n          <WrappedComponent\n            {...this.props}\n            {...addedProps}\n            style={style}\n            ref={this.setWrappedInstance}\n          />\n        );\n      }\n    }\n\n    return hoistStatics(StyledComponent, WrappedComponent);\n  };\n};\n"],"file":"connectStyle.js"}