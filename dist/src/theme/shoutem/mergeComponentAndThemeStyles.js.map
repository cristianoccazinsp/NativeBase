{"version":3,"sources":["../../../../src/theme/shoutem/mergeComponentAndThemeStyles.js"],"names":["mergeComponentAndThemeStyles","componentStyle","themeComponentStyle","themeStyle","componentThemedStyle","intersectedRootThemeStyle","_","pick","Object","keys"],"mappings":"yQAAA,iD,0/BAEe,QAASA,CAAAA,4BAAT,CACbC,cADa,CAEbC,mBAFa,CAGbC,UAHa,CAIb,CACA,GAAMC,CAAAA,oBAAoB,CAAG,sBAC3B,EAD2B,CAE3BH,cAF2B,CAG3BC,mBAH2B,CAA7B,CAQA,GAAMG,CAAAA,yBAAyB,CAAGC,CAAC,CAACC,IAAF,CAChCJ,UADgC,CAEhCK,MAAM,CAACC,IAAP,CAAYL,oBAAZ,CAFgC,CAAlC,CAMA,MAAO,sBAAc,EAAd,CAAkBC,yBAAlB,CAA6CD,oBAA7C,CAAP,CACD","sourcesContent":["import * as _ from 'lodash';\n\nexport default function mergeComponentAndThemeStyles(\n  componentStyle,\n  themeComponentStyle,\n  themeStyle,\n) {\n  const componentThemedStyle = Object.assign(\n    {},\n    componentStyle,\n    themeComponentStyle,\n  );\n\n  // Picking only required root theme style, used by component.\n  // We do not want to merge whole theme to component style.\n  const intersectedRootThemeStyle = _.pick(\n    themeStyle,\n    Object.keys(componentThemedStyle),\n  );\n\n  // Merging only common style, not all theme style with component style\n  return Object.assign({}, intersectedRootThemeStyle, componentThemedStyle);\n}\n"],"file":"mergeComponentAndThemeStyles.js"}