{"version":3,"sources":["../../../../src/theme/shoutem/mergeComponentAndThemeStyles.js"],"names":["mergeComponentAndThemeStyles","componentStyle","themeComponentStyle","themeStyle","componentThemedStyle","_","merge","intersectedRootThemeStyle","pick","keys"],"mappings":"sGAAA,iD,0/BAEe,QAASA,CAAAA,4BAAT,CACbC,cADa,CAEbC,mBAFa,CAGbC,UAHa,CAIb,CACA,GAAMC,CAAAA,oBAAoB,CAAGC,CAAC,CAACC,KAAF,CAAQ,EAAR,CAAYL,cAAZ,CAA4BC,mBAA5B,CAA7B,CAIA,GAAMK,CAAAA,yBAAyB,CAAGF,CAAC,CAACG,IAAF,CAChCL,UADgC,CAEhCE,CAAC,CAACI,IAAF,CAAOL,oBAAP,CAFgC,CAAlC,CAMA,MAAOC,CAAAA,CAAC,CAACC,KAAF,CAAQ,EAAR,CAAYC,yBAAZ,CAAuCH,oBAAvC,CAAP,CACD","sourcesContent":["import * as _ from 'lodash';\n\nexport default function mergeComponentAndThemeStyles(\n  componentStyle,\n  themeComponentStyle,\n  themeStyle,\n) {\n  const componentThemedStyle = _.merge({}, componentStyle, themeComponentStyle);\n\n  // Picking only required root theme style, used by component.\n  // We do not want to merge whole theme to component style.\n  const intersectedRootThemeStyle = _.pick(\n    themeStyle,\n    _.keys(componentThemedStyle),\n  );\n\n  // Merging only common style, not all theme style with component style\n  return _.merge({}, intersectedRootThemeStyle, componentThemedStyle);\n}\n"],"file":"mergeComponentAndThemeStyles.js"}