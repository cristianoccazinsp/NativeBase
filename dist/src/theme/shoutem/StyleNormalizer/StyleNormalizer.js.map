{"version":3,"sources":["../../../../../src/theme/shoutem/StyleNormalizer/StyleNormalizer.js"],"names":["StyleNormalizer","normalizers","createNormalizers","HORIZONTAL","VERTICAL","SIDES","prop","shorthands","suffix","forEach","shorthand","propName","type","normalizerExists","Error","ShorthandsNormalizerFactory","createNormalizer","normalizerName","val"],"mappings":"yVAAA,mG,6/BAUqBA,CAAAA,e,YACnB,0BAAc,oDACZ,KAAKC,WAAL,CAAmB,EAAnB,CACA,KAAKC,iBAAL,CAAuB,QAAvB,CAAiC,CAACC,uCAAD,CAAaC,qCAAb,CAAuBC,kCAAvB,CAAjC,EACA,KAAKH,iBAAL,CAAuB,SAAvB,CAAkC,CAACC,uCAAD,CAAaC,qCAAb,CAAuBC,kCAAvB,CAAlC,EACA,KAAKH,iBAAL,CAAuB,QAAvB,CAAiC,CAACG,kCAAD,CAAjC,CAA0C,OAA1C,EACD,C,0EAED,2BAAkBC,IAAlB,CAAwBC,UAAxB,CAAiD,mBAAbC,CAAAA,MAAa,2DAAJ,EAAI,CAC/CD,UAAU,CAACE,OAAX,CAAmB,SAACC,SAAD,CAAe,CAChC,GAAMC,CAAAA,QAAQ,CAAGL,IAAI,CAAGI,SAAS,CAACE,IAAjB,CAAwBJ,MAAzC,CAEA,GAAI,KAAI,CAACK,gBAAL,CAAsBF,QAAtB,CAAJ,CAAqC,CACnC,KAAMG,CAAAA,KAAK,oBAAoBH,QAApB,8BAAX,CACD,CAED,KAAI,CAACV,WAAL,CAAiBU,QAAjB,EAA6BI,qCAA4BC,gBAA5B,CAC3BV,IAD2B,CAE3BI,SAF2B,CAG3BF,MAH2B,CAA7B,CAKD,CAZD,EAaD,C,gCAED,0BAAiBS,cAAjB,CAAiC,CAC/B,MAAO,CAAC,CAAC,KAAKhB,WAAL,CAAiBgB,cAAjB,CAAT,CACD,C,4BAED,sBAAaX,IAAb,CAAmB,CACjB,MAAO,MAAKO,gBAAL,CAAsBP,IAAtB,CAAP,CACD,C,yBAED,mBAAUA,IAAV,CAAgBY,GAAhB,CAAqB,CACnB,MAAO,MAAKjB,WAAL,CAAiBK,IAAjB,EAAuBY,GAAvB,CAAP,CACD,C","sourcesContent":["import ShorthandsNormalizerFactory, {\n  SIDES,\n  HORIZONTAL,\n  VERTICAL,\n} from './ShorthandsNormalizerFactory';\n\n/**\n * Style Normalizer uses ShorthandsNormalizerCreators to creates different normalizers\n * specific to properties.\n */\nexport default class StyleNormalizer {\n  constructor() {\n    this.normalizers = {};\n    this.createNormalizers('margin', [HORIZONTAL, VERTICAL, SIDES]);\n    this.createNormalizers('padding', [HORIZONTAL, VERTICAL, SIDES]);\n    this.createNormalizers('border', [SIDES], 'Width');\n  }\n\n  createNormalizers(prop, shorthands, suffix = '') {\n    shorthands.forEach((shorthand) => {\n      const propName = prop + shorthand.type + suffix;\n\n      if (this.normalizerExists(propName)) {\n        throw Error(`Normalizer for '${propName}' shorthand already exists`);\n      }\n\n      this.normalizers[propName] = ShorthandsNormalizerFactory.createNormalizer(\n        prop,\n        shorthand,\n        suffix,\n      );\n    });\n  }\n\n  normalizerExists(normalizerName) {\n    return !!this.normalizers[normalizerName];\n  }\n\n  canNormalize(prop) {\n    return this.normalizerExists(prop);\n  }\n\n  normalize(prop, val) {\n    return this.normalizers[prop](val);\n  }\n}\n"],"file":"StyleNormalizer.js"}