{"version":3,"sources":["../../../../../src/theme/shoutem/StyleNormalizer/ShorthandsNormalizerFactory.js"],"names":["createShorthand","name","type","_","isUndefined","SIDES","CORNERS","HORIZONTAL","VERTICAL","LEFT","RIGHT","TOP","BOTTOM","TOP_RIGHT","BOTTOM_RIGHT","TOP_LEFT","BOTTOM_LEFT","ShorthandsNormalizerFactory","createNormalizersMap","createAllSidesNormalizer","createAllCornersNormalizer","createHorizontalSidesNormalizer","createVerticalSidesNormalizer","prop","shorthand","suffix","val","normalizerCreator","getNormalizerCreator"],"mappings":"2nBAAA,sDAEA,GAAMA,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,CAAOC,IAAP,QAAiB,CACvCD,IAAI,CAAJA,IADuC,CAEvCC,IAAI,CAAEC,gBAAEC,WAAF,CAAcF,IAAd,EAAsBD,IAAtB,CAA6BC,IAFI,CAAjB,EAAxB,CAKO,GAAMG,CAAAA,KAAK,CAAGL,eAAe,CAAC,OAAD,CAAU,EAAV,CAA7B,C,oBACA,GAAMM,CAAAA,OAAO,CAAGN,eAAe,CAAC,SAAD,CAAY,EAAZ,CAA/B,C,wBACA,GAAMO,CAAAA,UAAU,CAAGP,eAAe,CAAC,YAAD,CAAlC,C,8BACA,GAAMQ,CAAAA,QAAQ,CAAGR,eAAe,CAAC,UAAD,CAAhC,C,0BAEA,GAAMS,CAAAA,IAAI,CAAG,MAAb,C,kBACA,GAAMC,CAAAA,KAAK,CAAG,OAAd,C,oBACA,GAAMC,CAAAA,GAAG,CAAG,KAAZ,C,gBACA,GAAMC,CAAAA,MAAM,CAAG,QAAf,C,sBACA,GAAMC,CAAAA,SAAS,CAAG,UAAlB,C,4BACA,GAAMC,CAAAA,YAAY,CAAG,aAArB,C,kCACA,GAAMC,CAAAA,QAAQ,CAAG,SAAjB,C,0BACA,GAAMC,CAAAA,WAAW,CAAG,YAApB,C,mCAODC,CAAAA,2B,YACJ,sCAAc,0FACZ,KAAKC,oBAAL,8EACGb,KAAK,CAACJ,IADT,CACgB,KAAKkB,wBADrB,qDAEGb,OAAO,CAACL,IAFX,CAEkB,KAAKmB,0BAFvB,qDAGGb,UAAU,CAACN,IAHd,CAGqB,KAAKoB,+BAH1B,qDAIGb,QAAQ,CAACP,IAJZ,CAImB,KAAKqB,6BAJxB,yBAMD,C,6FAED,kCAAyBC,IAAzB,CAA+BC,SAA/B,CAAuD,IAAbC,CAAAA,MAAa,2DAAJ,EAAI,CACrD,MAAO,UAACC,GAAD,4DACJH,IAAI,CAAGd,IAAP,CAAcgB,MADV,CACmBC,GADnB,oCAEJH,IAAI,CAAGb,KAAP,CAAee,MAFX,CAEoBC,GAFpB,oCAGJH,IAAI,CAAGZ,GAAP,CAAac,MAHT,CAGkBC,GAHlB,oCAIJH,IAAI,CAAGX,MAAP,CAAgBa,MAJZ,CAIqBC,GAJrB,QAAP,CAMD,C,0CAED,oCAA2BH,IAA3B,CAAiCC,SAAjC,CAAyD,IAAbC,CAAAA,MAAa,2DAAJ,EAAI,CACvD,MAAO,UAACC,GAAD,+DACJH,IAAI,CAAGP,WAAP,CAAqBS,MADjB,CAC0BC,GAD1B,qCAEJH,IAAI,CAAGT,YAAP,CAAsBW,MAFlB,CAE2BC,GAF3B,qCAGJH,IAAI,CAAGR,QAAP,CAAkBU,MAHd,CAGuBC,GAHvB,qCAIJH,IAAI,CAAGV,SAAP,CAAmBY,MAJf,CAIwBC,GAJxB,SAAP,CAMD,C,+CAED,yCAAgCH,IAAhC,CAAsC,CACpC,MAAO,UAACG,GAAD,+DACJH,IAAI,CAAGd,IADH,CACUiB,GADV,qCAEJH,IAAI,CAAGb,KAFH,CAEWgB,GAFX,SAAP,CAID,C,6CAED,uCAA8BH,IAA9B,CAAoC,CAClC,MAAO,UAACG,GAAD,+DACJH,IAAI,CAAGZ,GADH,CACSe,GADT,qCAEJH,IAAI,CAAGX,MAFH,CAEYc,GAFZ,SAAP,CAID,C,oCAED,8BAAqBF,SAArB,CAAgC,CAC9B,MAAO,MAAKN,oBAAL,CAA0BM,SAAS,CAACvB,IAApC,CAAP,CACD,C,gCAED,0BAAiBsB,IAAjB,CAAuBC,SAAvB,CAAkCC,MAAlC,CAA0C,CACxC,GAAME,CAAAA,iBAAiB,CAAG,KAAKC,oBAAL,CAA0BJ,SAA1B,CAA1B,CACA,MAAOG,CAAAA,iBAAiB,CAACJ,IAAD,CAAOC,SAAP,CAAkBC,MAAlB,CAAxB,CACD,C,wDAGY,GAAIR,CAAAA,2BAAJ,E","sourcesContent":["import _ from 'lodash';\n\nconst createShorthand = (name, type) => ({\n  name,\n  type: _.isUndefined(type) ? name : type,\n});\n\nexport const SIDES = createShorthand('Sides', '');\nexport const CORNERS = createShorthand('Corners', '');\nexport const HORIZONTAL = createShorthand('Horizontal');\nexport const VERTICAL = createShorthand('Vertical');\n\nexport const LEFT = 'Left';\nexport const RIGHT = 'Right';\nexport const TOP = 'Top';\nexport const BOTTOM = 'Bottom';\nexport const TOP_RIGHT = 'TopRight';\nexport const BOTTOM_RIGHT = 'BottomRight';\nexport const TOP_LEFT = 'TopLeft';\nexport const BOTTOM_LEFT = 'BottomLeft';\n\n// Shorthands normalizers creators.\n// This creators provide standard normalizer used in most cases.\n// When style property has any of this shorthands, use this creators\n// to create shorthand normalizer.\n\nclass ShorthandsNormalizerFactory {\n  constructor() {\n    this.createNormalizersMap = {\n      [SIDES.name]: this.createAllSidesNormalizer,\n      [CORNERS.name]: this.createAllCornersNormalizer,\n      [HORIZONTAL.name]: this.createHorizontalSidesNormalizer,\n      [VERTICAL.name]: this.createVerticalSidesNormalizer,\n    };\n  }\n\n  createAllSidesNormalizer(prop, shorthand, suffix = '') {\n    return (val) => ({\n      [prop + LEFT + suffix]: val,\n      [prop + RIGHT + suffix]: val,\n      [prop + TOP + suffix]: val,\n      [prop + BOTTOM + suffix]: val,\n    });\n  }\n\n  createAllCornersNormalizer(prop, shorthand, suffix = '') {\n    return (val) => ({\n      [prop + BOTTOM_LEFT + suffix]: val,\n      [prop + BOTTOM_RIGHT + suffix]: val,\n      [prop + TOP_LEFT + suffix]: val,\n      [prop + TOP_RIGHT + suffix]: val,\n    });\n  }\n\n  createHorizontalSidesNormalizer(prop) {\n    return (val) => ({\n      [prop + LEFT]: val,\n      [prop + RIGHT]: val,\n    });\n  }\n\n  createVerticalSidesNormalizer(prop) {\n    return (val) => ({\n      [prop + TOP]: val,\n      [prop + BOTTOM]: val,\n    });\n  }\n\n  getNormalizerCreator(shorthand) {\n    return this.createNormalizersMap[shorthand.name];\n  }\n\n  createNormalizer(prop, shorthand, suffix) {\n    const normalizerCreator = this.getNormalizerCreator(shorthand);\n    return normalizerCreator(prop, shorthand, suffix);\n  }\n}\n\nexport default new ShorthandsNormalizerFactory();\n"],"file":"ShorthandsNormalizerFactory.js"}