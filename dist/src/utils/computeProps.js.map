{"version":3,"sources":["../../../src/utils/computeProps.js"],"names":["module","exports","incomingProps","defaultProps","computedProps","clonedIncomingProps","children","incomingPropsStyle","style","computedPropsStyle","Array","isArray","_","forEach","StyleSheet","flatten"],"mappings":"AAAA,a,mKACA,sDACA,yCAEAA,MAAM,CAACC,OAAP,CAAiB,SAAUC,aAAV,CAAyBC,YAAzB,CAAuC,CAEtD,GAAIC,CAAAA,aAAa,CAAG,EAApB,CAEA,GAAMC,CAAAA,mBAAmB,CAAG,sBAAc,EAAd,CAAkBH,aAAlB,CAA5B,CACA,MAAOG,CAAAA,mBAAmB,CAACC,QAA3B,CAEA,GAAMC,CAAAA,kBAAkB,CAAGL,aAAa,CAACM,KAAzC,CACA,MAAOH,CAAAA,mBAAmB,CAACG,KAA3B,CAEA,GAAIN,aAAJ,CAAmB,CACjB,sBAAcE,aAAd,CAA6BD,YAA7B,CAA2CD,aAA3C,EACD,CAFD,IAEO,CACLE,aAAa,CAAGD,YAAhB,CACD,CAED,GAAII,kBAAJ,CAAwB,CACtB,GAAIE,CAAAA,kBAAkB,CAAG,EAAzB,CACAL,aAAa,CAACI,KAAd,CAAsB,EAAtB,CACA,GAAIE,KAAK,CAACC,OAAN,CAAcJ,kBAAd,CAAJ,CAAuC,CACrCK,gBAAEC,OAAF,CAAUN,kBAAV,CAA8B,SAACC,KAAD,CAAW,CACvC,GAAI,MAAOA,CAAAA,KAAP,GAAiB,QAArB,CAA+B,CAC7B,sBAAcC,kBAAd,CAAkCK,wBAAWC,OAAX,CAAmBP,KAAnB,CAAlC,EACD,CAFD,IAEO,CACL,sBAAcC,kBAAd,CAAkCD,KAAlC,EACD,CACF,CAND,EAOD,CARD,IAQO,IAAI,MAAOD,CAAAA,kBAAP,GAA8B,QAAlC,CAA4C,CACjDE,kBAAkB,CAAGK,wBAAWC,OAAX,CAAmBR,kBAAnB,CAArB,CACD,CAFM,IAEA,CACLE,kBAAkB,CAAGF,kBAArB,CACD,CAED,sBAAcH,aAAa,CAACI,KAA5B,CAAmCL,YAAY,CAACK,KAAhD,CAAuDC,kBAAvD,EACD,CACD,MAAOL,CAAAA,aAAP,CACD,CApCD","sourcesContent":["'use_strict';\nimport _ from 'lodash';\nimport {StyleSheet} from 'react-native';\n\nmodule.exports = function (incomingProps, defaultProps) {\n  // External props has a higher precedence\n  let computedProps = {};\n\n  const clonedIncomingProps = Object.assign({}, incomingProps);\n  delete clonedIncomingProps.children;\n\n  const incomingPropsStyle = incomingProps.style;\n  delete clonedIncomingProps.style;\n\n  if (incomingProps) {\n    Object.assign(computedProps, defaultProps, incomingProps);\n  } else {\n    computedProps = defaultProps;\n  }\n  // Pass the merged Style Object instead\n  if (incomingPropsStyle) {\n    let computedPropsStyle = {};\n    computedProps.style = {};\n    if (Array.isArray(incomingPropsStyle)) {\n      _.forEach(incomingPropsStyle, (style) => {\n        if (typeof style === 'number') {\n          Object.assign(computedPropsStyle, StyleSheet.flatten(style));\n        } else {\n          Object.assign(computedPropsStyle, style);\n        }\n      });\n    } else if (typeof incomingPropsStyle === 'number') {\n      computedPropsStyle = StyleSheet.flatten(incomingPropsStyle);\n    } else {\n      computedPropsStyle = incomingPropsStyle;\n    }\n\n    Object.assign(computedProps.style, defaultProps.style, computedPropsStyle);\n  }\n  return computedProps;\n};\n"],"file":"computeProps.js"}