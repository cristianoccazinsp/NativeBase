{"version":3,"sources":["../../../src/utils/computeProps.js"],"names":["module","exports","incomingProps","defaultProps","computedProps","clonedIncomingProps","_","clone","children","incomingPropsStyle","style","assign","computedPropsStyle","Array","isArray","forEach","merge","StyleSheet","flatten"],"mappings":"AAAA,a,mFACA,sDACA,yCAEAA,MAAM,CAACC,OAAP,CAAiB,SAAUC,aAAV,CAAyBC,YAAzB,CAAuC,CAEtD,GAAIC,CAAAA,aAAa,CAAG,EAApB,CAEA,GAAMC,CAAAA,mBAAmB,CAAGC,gBAAEC,KAAF,CAAQL,aAAR,CAA5B,CACA,MAAOG,CAAAA,mBAAmB,CAACG,QAA3B,CAEA,GAAMC,CAAAA,kBAAkB,CAAGP,aAAa,CAACQ,KAAzC,CACA,MAAOL,CAAAA,mBAAmB,CAACK,KAA3B,CAEA,GAAIR,aAAJ,CAAmB,CACjBI,gBAAEK,MAAF,CAASP,aAAT,CAAwBD,YAAxB,CAAsCD,aAAtC,EACD,CAFD,IAEO,CACLE,aAAa,CAAGD,YAAhB,CACD,CAED,GAAIM,kBAAJ,CAAwB,CACtB,GAAIG,CAAAA,kBAAkB,CAAG,EAAzB,CACAR,aAAa,CAACM,KAAd,CAAsB,EAAtB,CACA,GAAIG,KAAK,CAACC,OAAN,CAAcL,kBAAd,CAAJ,CAAuC,CACrCH,gBAAES,OAAF,CAAUN,kBAAV,CAA8B,SAACC,KAAD,CAAW,CACvC,GAAI,MAAOA,CAAAA,KAAP,GAAiB,QAArB,CAA+B,CAC7BJ,gBAAEU,KAAF,CAAQJ,kBAAR,CAA4BK,wBAAWC,OAAX,CAAmBR,KAAnB,CAA5B,EACD,CAFD,IAEO,CACLJ,gBAAEU,KAAF,CAAQJ,kBAAR,CAA4BF,KAA5B,EACD,CACF,CAND,EAOD,CARD,IAQO,IAAI,MAAOD,CAAAA,kBAAP,GAA8B,QAAlC,CAA4C,CACjDG,kBAAkB,CAAGK,wBAAWC,OAAX,CAAmBT,kBAAnB,CAArB,CACD,CAFM,IAEA,CACLG,kBAAkB,CAAGH,kBAArB,CACD,CAEDH,gBAAEU,KAAF,CAAQZ,aAAa,CAACM,KAAtB,CAA6BP,YAAY,CAACO,KAA1C,CAAiDE,kBAAjD,EACD,CACD,MAAOR,CAAAA,aAAP,CACD,CApCD","sourcesContent":["'use_strict';\nimport _ from 'lodash';\nimport {StyleSheet} from 'react-native';\n\nmodule.exports = function (incomingProps, defaultProps) {\n  // External props has a higher precedence\n  let computedProps = {};\n\n  const clonedIncomingProps = _.clone(incomingProps);\n  delete clonedIncomingProps.children;\n\n  const incomingPropsStyle = incomingProps.style;\n  delete clonedIncomingProps.style;\n\n  if (incomingProps) {\n    _.assign(computedProps, defaultProps, incomingProps);\n  } else {\n    computedProps = defaultProps;\n  }\n  // Pass the merged Style Object instead\n  if (incomingPropsStyle) {\n    let computedPropsStyle = {};\n    computedProps.style = {};\n    if (Array.isArray(incomingPropsStyle)) {\n      _.forEach(incomingPropsStyle, (style) => {\n        if (typeof style === 'number') {\n          _.merge(computedPropsStyle, StyleSheet.flatten(style));\n        } else {\n          _.merge(computedPropsStyle, style);\n        }\n      });\n    } else if (typeof incomingPropsStyle === 'number') {\n      computedPropsStyle = StyleSheet.flatten(incomingPropsStyle);\n    } else {\n      computedPropsStyle = incomingPropsStyle;\n    }\n\n    _.merge(computedProps.style, defaultProps.style, computedPropsStyle);\n  }\n  return computedProps;\n};\n"],"file":"computeProps.js"}