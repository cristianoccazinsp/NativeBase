{"version":3,"sources":["../../../src/basic/Radio.js"],"names":["Radio","defaultProps","standardStyle","props","variables","context","theme","variable","c","_root","prepareRootProps","Platform","OS","selected","color","selectedColor","radioColor","lineHeight","height","fontSize","radioBtnSize","undefined","radioSelectedColorAndroid","radioBtnLineHeight","Component","contextTypes","PropTypes","object","propTypes","TouchableOpacity","bool","StyledRadio","mapPropsToStyleNames"],"mappings":"2sBAAA,qDACA,6DACA,yCACA,oFAEA,yCACA,2FACA,6EACA,2E,kzDAEMA,CAAAA,K,4PAIJ,2BAAmB,CACjB,GAAMC,CAAAA,YAAY,CAAG,CACnBC,aAAa,CAAE,KADI,CAArB,CAIA,MAAO,0BAAa,KAAKC,KAAlB,CAAyBF,YAAzB,CAAP,CACD,C,sBAED,iBAAS,gBACP,GAAMG,CAAAA,SAAS,CAAG,KAAKC,OAAL,CAAaC,KAAb,CACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADnC,CAEdG,iBAFJ,CAIA,MACE,8BAAC,6BAAD,wBACE,GAAG,CAAE,aAACC,CAAD,QAAQ,CAAA,KAAI,CAACC,KAAL,CAAaD,CAArB,EADP,EAEM,KAAKE,gBAAL,EAFN,8EAGGC,sBAASC,EAAT,GAAgB,KAAhB,EAAyB,CAAC,KAAKT,KAAL,CAAWD,aAArC,CACC,KAAKC,KAAL,CAAWU,QAAX,EACE,6BAAC,iBAAD,EACE,KAAK,CAAE,CACLC,KAAK,CAAE,KAAKX,KAAL,CAAWY,aAAX,CACH,KAAKZ,KAAL,CAAWY,aADR,CAEHX,SAAS,CAACY,UAHT,CAILC,UAAU,CAAE,EAJP,CAKLC,MAAM,CAAE,EALH,CAMLC,QAAQ,CAAEf,SAAS,CAACgB,YANf,CADT,CASE,IAAI,CAAC,eATP,6EAFH,CAeC,6BAAC,iBAAD,EACE,KAAK,CAAE,CACLN,KAAK,CACHH,sBAASC,EAAT,GAAgB,KAAhB,CACI,KAAKT,KAAL,CAAWU,QAAX,CACE,KAAKV,KAAL,CAAWY,aAAX,CACE,KAAKZ,KAAL,CAAWY,aADb,CAEEX,SAAS,CAACY,UAHd,CAIE,KAAKb,KAAL,CAAWW,KAAX,CACA,KAAKX,KAAL,CAAWW,KADX,CAEAO,SAPN,CAQI,KAAKlB,KAAL,CAAWU,QAAX,CACA,KAAKV,KAAL,CAAWY,aAAX,CACE,KAAKZ,KAAL,CAAWY,aADb,CAEEX,SAAS,CAACkB,yBAHZ,CAIA,KAAKnB,KAAL,CAAWW,KAAX,CACA,KAAKX,KAAL,CAAWW,KADX,CAEAO,SAhBD,CAiBLJ,UAAU,CAAEb,SAAS,CAACmB,kBAjBjB,CAkBLJ,QAAQ,CAAEf,SAAS,CAACgB,YAlBf,CADT,CAqBE,IAAI,CACFT,sBAASC,EAAT,GAAgB,KAAhB,CACI,KAAKT,KAAL,CAAWU,QAAX,CACE,qBADF,CAEE,sBAHN,CAII,KAAKV,KAAL,CAAWU,QAAX,CACA,oBADA,CAEA,qBA5BR,6EAlBJ,CADF,CAqDD,C,mBAtEiBW,gB,EAAdxB,K,CACGyB,Y,CAAe,CACpBnB,KAAK,CAAEoB,mBAAUC,MADG,C,CAwExB3B,KAAK,CAAC4B,SAAN,0BACKC,8BAAiBD,SADtB,EAEEf,QAAQ,CAAEa,mBAAUI,IAFtB,CAGE5B,aAAa,CAAEwB,mBAAUI,IAH3B,GAMA,GAAMC,CAAAA,WAAW,CAAG,0BAClB,kBADkB,CAElB,EAFkB,CAGlBC,6BAHkB,EAIlBhC,KAJkB,CAApB,C","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {TouchableOpacity, Platform} from 'react-native';\nimport Icon from 'react-native-vector-icons/Ionicons';\n\nimport {connectStyle} from '../theme/shoutem';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport variable from '../theme/variables/platform';\nimport computeProps from '../utils/computeProps';\n\nclass Radio extends Component {\n  static contextTypes = {\n    theme: PropTypes.object,\n  };\n  prepareRootProps() {\n    const defaultProps = {\n      standardStyle: false,\n    };\n\n    return computeProps(this.props, defaultProps);\n  }\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n\n    return (\n      <TouchableOpacity\n        ref={(c) => (this._root = c)}\n        {...this.prepareRootProps()}>\n        {Platform.OS === 'ios' && !this.props.standardStyle ? (\n          this.props.selected && (\n            <Icon\n              style={{\n                color: this.props.selectedColor\n                  ? this.props.selectedColor\n                  : variables.radioColor,\n                lineHeight: 25,\n                height: 20,\n                fontSize: variables.radioBtnSize,\n              }}\n              name=\"ios-checkmark\"\n            />\n          )\n        ) : (\n          <Icon\n            style={{\n              color:\n                Platform.OS === 'ios'\n                  ? this.props.selected\n                    ? this.props.selectedColor\n                      ? this.props.selectedColor\n                      : variables.radioColor\n                    : this.props.color\n                    ? this.props.color\n                    : undefined\n                  : this.props.selected\n                  ? this.props.selectedColor\n                    ? this.props.selectedColor\n                    : variables.radioSelectedColorAndroid\n                  : this.props.color\n                  ? this.props.color\n                  : undefined,\n              lineHeight: variables.radioBtnLineHeight,\n              fontSize: variables.radioBtnSize,\n            }}\n            name={\n              Platform.OS === 'ios'\n                ? this.props.selected\n                  ? 'ios-radio-button-on'\n                  : 'ios-radio-button-off'\n                : this.props.selected\n                ? 'md-radio-button-on'\n                : 'md-radio-button-off'\n            }\n          />\n        )}\n      </TouchableOpacity>\n    );\n  }\n}\n\nRadio.propTypes = {\n  ...TouchableOpacity.propTypes,\n  selected: PropTypes.bool,\n  standardStyle: PropTypes.bool,\n};\n\nconst StyledRadio = connectStyle(\n  'NativeBase.Radio',\n  {},\n  mapPropsToStyleNames,\n)(Radio);\n\nexport {StyledRadio as Radio};\n"],"file":"Radio.js"}