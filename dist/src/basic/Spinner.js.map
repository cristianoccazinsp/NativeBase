{"version":3,"sources":["../../../src/basic/Spinner.js"],"names":["Spinner","variables","context","theme","variable","c","_root","props","color","inverse","inverseSpinnerColor","defaultSpinnerColor","size","Component","contextTypes","PropTypes","object","propTypes","ActivityIndicator","string","bool","StyledSpinner","mapPropsToStyleNames"],"mappings":"6sBAAA,qDACA,6DACA,yCAEA,yCACA,6EACA,2F,ozDAEMA,CAAAA,O,4PAIJ,iBAAS,gBACP,GAAMC,CAAAA,SAAS,CAAG,KAAKC,OAAL,CAAaC,KAAb,CACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADnC,CAEdG,iBAFJ,CAGA,MACE,8BAAC,8BAAD,wBACE,GAAG,CAAE,aAACC,CAAD,QAAQ,CAAA,KAAI,CAACC,KAAL,CAAaD,CAArB,EADP,EAEM,KAAKE,KAFX,EAGE,KAAK,CACH,KAAKA,KAAL,CAAWC,KAAX,CACI,KAAKD,KAAL,CAAWC,KADf,CAEI,KAAKD,KAAL,CAAWE,OAAX,CACAR,SAAS,CAACS,mBADV,CAEAT,SAAS,CAACU,mBARlB,CAUE,IAAI,CAAE,KAAKJ,KAAL,CAAWK,IAAX,CAAkB,KAAKL,KAAL,CAAWK,IAA7B,CAAoC,OAV5C,6EADF,CAcD,C,qBAtBmBC,gB,EAAhBb,O,CACGc,Y,CAAe,CACpBX,KAAK,CAAEY,mBAAUC,MADG,C,CAwBxBhB,OAAO,CAACiB,SAAR,0BACKC,+BAAkBD,SADvB,EAEET,KAAK,CAAEO,mBAAUI,MAFnB,CAGEV,OAAO,CAAEM,mBAAUK,IAHrB,GAMA,GAAMC,CAAAA,aAAa,CAAG,0BACpB,oBADoB,CAEpB,EAFoB,CAGpBC,6BAHoB,EAIpBtB,OAJoB,CAAtB,C","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {ActivityIndicator} from 'react-native';\n\nimport {connectStyle} from '../theme/shoutem';\nimport variable from '../theme/variables/platform';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nclass Spinner extends Component {\n  static contextTypes = {\n    theme: PropTypes.object,\n  };\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n    return (\n      <ActivityIndicator\n        ref={(c) => (this._root = c)}\n        {...this.props}\n        color={\n          this.props.color\n            ? this.props.color\n            : this.props.inverse\n            ? variables.inverseSpinnerColor\n            : variables.defaultSpinnerColor\n        }\n        size={this.props.size ? this.props.size : 'large'}\n      />\n    );\n  }\n}\n\nSpinner.propTypes = {\n  ...ActivityIndicator.propTypes,\n  color: PropTypes.string,\n  inverse: PropTypes.bool,\n};\n\nconst StyledSpinner = connectStyle(\n  'NativeBase.Spinner',\n  {},\n  mapPropsToStyleNames,\n)(Spinner);\n\nexport {StyledSpinner as Spinner};\n"],"file":"Spinner.js"}