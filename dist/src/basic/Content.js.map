{"version":3,"sources":["../../../src/basic/Content.js"],"names":["Content","props","children","contentContainerStyle","disableKBDismissScroll","keyboardShouldPersistTaps","padder","style","containerStyle","flex","backgroundColor","variables","context","theme","variable","x","y","c","_scrollview","_root","padding","contentPadding","undefined","Component","contextTypes","PropTypes","object","propTypes","bool","string","oneOfType","number","array","StyledContent","mapPropsToStyleNames"],"mappings":"6sBAAA,6DACA,qDACA,yCACA,mGAEA,yCACA,6EACA,2FACA,mE,ozDAEMA,CAAAA,O,4PAKJ,iBAAS,gBACP,gBAOI,KAAKC,KAPT,CACEC,QADF,aACEA,QADF,CAEEC,qBAFF,aAEEA,qBAFF,CAGEC,sBAHF,aAGEA,sBAHF,CAIEC,yBAJF,aAIEA,yBAJF,CAKEC,MALF,aAKEA,MALF,CAMEC,KANF,aAMEA,KANF,CASA,GAAMC,CAAAA,cAAc,CAAG,CACrBC,IAAI,CAAE,CADe,CAErBC,eAAe,CAAE,sBAASH,KAAT,EAAgBG,eAFZ,CAAvB,CAKA,GAAMC,CAAAA,SAAS,CAAG,KAAKC,OAAL,CAAaC,KAAb,CACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADnC,CAEdG,iBAFJ,CAIA,MACE,8BAAC,yBAAD,EAAc,KAAK,CAAEN,cAArB,4EACE,6BAAC,2DAAD,wBACE,gCAAgC,CAAE,KADpC,CAEE,mBAAmB,CAAEJ,sBAAsB,CAAG,IAAH,CAAU,CAACW,CAAC,CAAE,CAAJ,CAAOC,CAAC,CAAE,CAAV,CAFvD,CAGE,yBAAyB,CAAEX,yBAAyB,EAAI,SAH1D,CAIE,GAAG,CAAE,aAACY,CAAD,CAAO,CACV,KAAI,CAACC,WAAL,CAAmBD,CAAnB,CACA,KAAI,CAACE,KAAL,CAAaF,CAAb,CACD,CAPH,EAQM,KAAKhB,KARX,EASE,qBAAqB,CAAE,CACrB,CAACmB,OAAO,CAAEd,MAAM,CAAGK,SAAS,CAACU,cAAb,CAA8BC,SAA9C,CADqB,CAErBnB,qBAFqB,CATzB,6EAaGD,QAbH,CADF,CADF,CAmBD,C,qBA3CmBqB,gB,EAAhBvB,O,CACGwB,Y,CAAe,CACpBX,KAAK,CAAEY,mBAAUC,MADG,C,CA6CxB1B,OAAO,CAAC2B,SAAR,CAAoB,CAClBvB,sBAAsB,CAAEqB,mBAAUG,IADhB,CAElBvB,yBAAyB,CAAEoB,mBAAUI,MAFnB,CAGlBvB,MAAM,CAAEmB,mBAAUG,IAHA,CAIlBrB,KAAK,CAAEkB,mBAAUK,SAAV,CAAoB,CACzBL,mBAAUC,MADe,CAEzBD,mBAAUM,MAFe,CAGzBN,mBAAUO,KAHe,CAApB,CAJW,CAApB,CAWA,GAAMC,CAAAA,aAAa,CAAG,0BACpB,oBADoB,CAEpB,EAFoB,CAGpBC,6BAHoB,EAIpBlC,OAJoB,CAAtB,C","sourcesContent":["import PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {SafeAreaView} from 'react-native';\nimport {KeyboardAwareScrollView} from '@codler/react-native-keyboard-aware-scroll-view';\n\nimport {connectStyle} from '../theme/shoutem';\nimport variable from '../theme/variables/platform';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport getStyle from '../utils/getStyle';\n\nclass Content extends Component {\n  static contextTypes = {\n    theme: PropTypes.object,\n  };\n\n  render() {\n    const {\n      children,\n      contentContainerStyle,\n      disableKBDismissScroll,\n      keyboardShouldPersistTaps,\n      padder,\n      style,\n    } = this.props;\n\n    const containerStyle = {\n      flex: 1,\n      backgroundColor: getStyle(style).backgroundColor,\n    };\n\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n\n    return (\n      <SafeAreaView style={containerStyle}>\n        <KeyboardAwareScrollView\n          automaticallyAdjustContentInsets={false}\n          resetScrollToCoords={disableKBDismissScroll ? null : {x: 0, y: 0}}\n          keyboardShouldPersistTaps={keyboardShouldPersistTaps || 'handled'}\n          ref={(c) => {\n            this._scrollview = c;\n            this._root = c;\n          }}\n          {...this.props}\n          contentContainerStyle={[\n            {padding: padder ? variables.contentPadding : undefined},\n            contentContainerStyle,\n          ]}>\n          {children}\n        </KeyboardAwareScrollView>\n      </SafeAreaView>\n    );\n  }\n}\n\nContent.propTypes = {\n  disableKBDismissScroll: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.string,\n  padder: PropTypes.bool,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array,\n  ]),\n};\n\nconst StyledContent = connectStyle(\n  'NativeBase.Content',\n  {},\n  mapPropsToStyleNames,\n)(Content);\n\nexport {StyledContent as Content};\n"],"file":"Content.js"}