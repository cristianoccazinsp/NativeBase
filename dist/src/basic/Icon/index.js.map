{"version":3,"sources":["../../../../src/basic/Icon/index.js"],"names":["IS_IOS","Platform","OS","getName","props","type","ic","name","active","ios","default","android","Icon","React","PureComponent","propTypes","IconNB","style","PropTypes","oneOfType","object","number","array","string","bool","StyledIcon","mapPropsToStyleNames"],"mappings":"y1BAAA,4B,2CACA,qC,mDACA,yCAEA,4CACA,sE,yEACA,iCAEA,uC,g7BAGA,GAAMA,QAASC,sBAASC,EAAT,GAAgB,KAA/B,CAEA,QAASC,QAAT,CAAiBC,KAAjB,CAAwB,CAEtB,GAAI,CAACA,MAAMC,IAAX,CAAiB,CACf,GAAI,MAAOC,mBAAGF,MAAMG,IAAT,CAAP,GAA0B,QAA9B,CAAwC,CACtC,MAAOH,OAAMG,IAAb,CACD,CACD,GAAIA,YAAJ,CAEA,GAAIP,MAAJ,CAAY,CACVO,KAAOH,MAAMI,MAAN,CACHF,kBAAGF,MAAMG,IAAT,EAAeE,GAAf,CAAmBD,MADhB,CAEHF,kBAAGF,MAAMG,IAAT,EAAeE,GAAf,CAAmBC,OAFvB,CAGD,CAJD,IAIO,CACLH,KAAOH,MAAMI,MAAN,CACHF,kBAAGF,MAAMG,IAAT,EAAeI,OAAf,CAAuBH,MADpB,CAEHF,kBAAGF,MAAMG,IAAT,EAAeI,OAAf,CAAuBD,OAF3B,CAGD,CACD,MAAOH,KAAP,CACD,CACD,MAAOH,OAAMG,IAAb,CACD,C,GAEKK,K,qRAEK,YACc,KAAKR,KADnB,CACFK,GADE,QACFA,GADE,CACGE,OADH,QACGA,OADH,CAGP,GAAIF,KAAOE,OAAX,CAAoB,CAClB,MACE,+BAAC,cAAD,aACM,KAAKP,KADX,EAEE,KAAMJ,OAASS,GAAT,CAAeE,OAFvB,kDADF,CAMD,CACD,MACE,+BAAC,cAAD,aACM,KAAKP,KADX,EAEE,KAAMD,QAAQ,KAAKC,KAAb,CAFR,kDADF,CAMD,C,kBAnBgBS,gBAAMC,a,EAsBzBF,KAAKG,SAAL,aACKC,eAAOD,SADZ,EAEEE,MAAOC,oBAAUC,SAAV,CAAoB,CACzBD,oBAAUE,MADe,CAEzBF,oBAAUG,MAFe,CAGzBH,oBAAUI,KAHe,CAApB,CAFT,CAOEf,KAAMW,oBAAUK,MAPlB,CAQEd,IAAKS,oBAAUK,MARjB,CASEZ,QAASO,oBAAUK,MATrB,CAUEf,OAAQU,oBAAUM,IAVpB,CAWEnB,KAAMa,oBAAUK,MAXlB,GAcA,GAAME,YAAa,0BAAa,iBAAb,CAAgC,EAAhC,CAAoCC,8BAApC,EACjBd,IADiB,CAAnB,C,QAIuBA,I,CAAda,U","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Platform } from 'react-native';\n\nimport { connectStyle } from '../../theme/shoutem';\nimport mapPropsToStyleNames from '../../utils/mapPropsToStyleNames';\nimport { IconNB } from '../IconNB';\n\nimport ic from './NBIcons.json';\n\n\nconst IS_IOS = Platform.OS === 'ios';\n\nfunction getName(props) {\n\n  if (!props.type) {\n    if (typeof ic[props.name] !== 'object') {\n      return props.name;\n    }\n    let name;\n\n    if (IS_IOS) {\n      name = props.active\n        ? ic[props.name].ios.active\n        : ic[props.name].ios.default;\n    } else {\n      name = props.active\n        ? ic[props.name].android.active\n        : ic[props.name].android.default;\n    }\n    return name;\n  }\n  return props.name;\n}\n\nclass Icon extends React.PureComponent {\n\n  render() {\n    let {ios, android} = this.props;\n\n    if (ios && android) {\n      return (\n        <IconNB\n          {...this.props}\n          name={IS_IOS ? ios : android}\n        />\n      );\n    }\n    return (\n      <IconNB\n        {...this.props}\n        name={getName(this.props)}\n      />\n    );\n  }\n}\n\nIcon.propTypes = {\n  ...IconNB.propTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  name: PropTypes.string,\n  ios: PropTypes.string,\n  android: PropTypes.string,\n  active: PropTypes.bool,\n  type: PropTypes.string\n};\n\nconst StyledIcon = connectStyle('NativeBase.Icon', {}, mapPropsToStyleNames)(\n  Icon\n);\n\nexport { StyledIcon as Icon };\n"]}