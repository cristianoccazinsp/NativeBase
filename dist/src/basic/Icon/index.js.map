{"version":3,"sources":["../../../../src/basic/Icon/index.js"],"names":["IS_IOS","Platform","OS","getName","props","type","ic","name","active","ios","default","android","Icon","React","PureComponent","propTypes","IconNB","style","PropTypes","oneOfType","object","number","array","string","bool","StyledIcon","mapPropsToStyleNames"],"mappings":"0sBAAA,oDACA,6DACA,yCAEA,4CACA,8FACA,iCAEA,+D,0zBAEA,GAAMA,CAAAA,MAAM,CAAGC,sBAASC,EAAT,GAAgB,KAA/B,CAEA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CACtB,GAAI,CAACA,KAAK,CAACC,IAAX,CAAiB,CACf,GAAI,MAAOC,kBAAGF,KAAK,CAACG,IAAT,CAAP,GAA0B,QAA9B,CAAwC,CACtC,MAAOH,CAAAA,KAAK,CAACG,IAAb,CACD,CACD,GAAIA,CAAAA,IAAJ,CAEA,GAAIP,MAAJ,CAAY,CACVO,IAAI,CAAGH,KAAK,CAACI,MAAN,CACHF,iBAAGF,KAAK,CAACG,IAAT,EAAeE,GAAf,CAAmBD,MADhB,CAEHF,iBAAGF,KAAK,CAACG,IAAT,EAAeE,GAAf,CAAmBC,OAFvB,CAGD,CAJD,IAIO,CACLH,IAAI,CAAGH,KAAK,CAACI,MAAN,CACHF,iBAAGF,KAAK,CAACG,IAAT,EAAeI,OAAf,CAAuBH,MADpB,CAEHF,iBAAGF,KAAK,CAACG,IAAT,EAAeI,OAAf,CAAuBD,OAF3B,CAGD,CACD,MAAOH,CAAAA,IAAP,CACD,CACD,MAAOH,CAAAA,KAAK,CAACG,IAAb,CACD,C,GAEKK,CAAAA,I,iQACJ,iBAAS,CACP,gBAAqB,KAAKR,KAA1B,CAAKK,GAAL,aAAKA,GAAL,CAAUE,OAAV,aAAUA,OAAV,CAEA,GAAIF,GAAG,EAAIE,OAAX,CAAoB,CAClB,MAAO,8BAAC,cAAD,0BAAY,KAAKP,KAAjB,EAAwB,IAAI,CAAEJ,MAAM,CAAGS,GAAH,CAASE,OAA7C,8EAAP,CACD,CACD,MAAO,8BAAC,cAAD,0BAAY,KAAKP,KAAjB,EAAwB,IAAI,CAAED,OAAO,CAAC,KAAKC,KAAN,CAArC,8EAAP,CACD,C,kBARgBS,eAAMC,a,EAWzBF,IAAI,CAACG,SAAL,0BACKC,eAAOD,SADZ,EAEEE,KAAK,CAAEC,mBAAUC,SAAV,CAAoB,CACzBD,mBAAUE,MADe,CAEzBF,mBAAUG,MAFe,CAGzBH,mBAAUI,KAHe,CAApB,CAFT,CAOEf,IAAI,CAAEW,mBAAUK,MAPlB,CAQEd,GAAG,CAAES,mBAAUK,MARjB,CASEZ,OAAO,CAAEO,mBAAUK,MATrB,CAUEf,MAAM,CAAEU,mBAAUM,IAVpB,CAWEnB,IAAI,CAAEa,mBAAUK,MAXlB,GAcA,GAAME,CAAAA,UAAU,CAAG,0BACjB,iBADiB,CAEjB,EAFiB,CAGjBC,6BAHiB,EAIjBd,IAJiB,CAAnB,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Platform} from 'react-native';\n\nimport {connectStyle} from '../../theme/shoutem';\nimport mapPropsToStyleNames from '../../utils/mapPropsToStyleNames';\nimport {IconNB} from '../IconNB';\n\nimport ic from './NBIcons.json';\n\nconst IS_IOS = Platform.OS === 'ios';\n\nfunction getName(props) {\n  if (!props.type) {\n    if (typeof ic[props.name] !== 'object') {\n      return props.name;\n    }\n    let name;\n\n    if (IS_IOS) {\n      name = props.active\n        ? ic[props.name].ios.active\n        : ic[props.name].ios.default;\n    } else {\n      name = props.active\n        ? ic[props.name].android.active\n        : ic[props.name].android.default;\n    }\n    return name;\n  }\n  return props.name;\n}\n\nclass Icon extends React.PureComponent {\n  render() {\n    let {ios, android} = this.props;\n\n    if (ios && android) {\n      return <IconNB {...this.props} name={IS_IOS ? ios : android} />;\n    }\n    return <IconNB {...this.props} name={getName(this.props)} />;\n  }\n}\n\nIcon.propTypes = {\n  ...IconNB.propTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array,\n  ]),\n  name: PropTypes.string,\n  ios: PropTypes.string,\n  android: PropTypes.string,\n  active: PropTypes.bool,\n  type: PropTypes.string,\n};\n\nconst StyledIcon = connectStyle(\n  'NativeBase.Icon',\n  {},\n  mapPropsToStyleNames,\n)(Icon);\n\nexport {StyledIcon as Icon};\n"],"file":"index.js"}