{"version":3,"sources":["../../../src/basic/Textarea.js"],"names":["Textarea","textarea","height","props","rowSpan","defaultProps","style","getStyle","c","_textInput","_root","prepareRootProps","placeholderTextColor","variables","inputColorPlaceholder","disabled","Component","propTypes","TextInput","PropTypes","oneOfType","object","number","array","bordered","bool","underline","StyledTextarea","mapPropsToStyleNames"],"mappings":"8sBAAA,qDACA,6DACA,yCAEA,yCACA,6EACA,2EACA,2F,qzDAEMA,CAAAA,Q,mQACJ,mBAAW,CACT,MAAO,CACLC,QAAQ,CAAE,CACRC,MAAM,CAAE,KAAKC,KAAL,CAAWC,OAAX,CAAqB,KAAKD,KAAL,CAAWC,OAAX,CAAqB,EAA1C,CAA+C,EAD/C,CADL,CAAP,CAKD,C,gCAED,2BAAmB,CACjB,GAAMC,CAAAA,YAAY,CAAG,CACnBC,KAAK,CAAE,KAAKC,QAAL,GAAgBN,QADJ,CAArB,CAGA,MAAO,0BAAa,KAAKE,KAAlB,CAAyBE,YAAzB,CAAP,CACD,C,sBACD,iBAAS,gBACP,MACE,8BAAC,sBAAD,wBACE,GAAG,CAAE,aAACG,CAAD,CAAO,CACV,KAAI,CAACC,UAAL,CAAkBD,CAAlB,CACA,KAAI,CAACE,KAAL,CAAaF,CAAb,CACD,CAJH,EAKM,KAAKG,gBAAL,EALN,EAME,SAAS,KANX,CAOE,oBAAoB,CAClB,KAAKR,KAAL,CAAWS,oBAAX,CACI,KAAKT,KAAL,CAAWS,oBADf,CAEIC,kBAAUC,qBAVlB,CAYE,qBAAqB,CAAC,eAZxB,CAaE,QAAQ,CAAE,CAAC,KAAKX,KAAL,CAAWY,QAbxB,6EADF,CAiBD,C,sBAjCoBC,gB,EAoCvBhB,QAAQ,CAACiB,SAAT,0BACKC,uBAAUD,SADf,EAEEX,KAAK,CAAEa,mBAAUC,SAAV,CAAoB,CACzBD,mBAAUE,MADe,CAEzBF,mBAAUG,MAFe,CAGzBH,mBAAUI,KAHe,CAApB,CAFT,CAOEnB,OAAO,CAAEe,mBAAUG,MAPrB,CAQEE,QAAQ,CAAEL,mBAAUM,IARtB,CASEC,SAAS,CAAEP,mBAAUM,IATvB,GAYA,GAAME,CAAAA,cAAc,CAAG,0BACrB,qBADqB,CAErB,EAFqB,CAGrBC,6BAHqB,EAIrB5B,QAJqB,CAAvB,C","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {TextInput} from 'react-native';\n\nimport {connectStyle} from '../theme/shoutem';\nimport variables from '../theme/variables/platform';\nimport computeProps from '../utils/computeProps';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nclass Textarea extends Component {\n  getStyle() {\n    return {\n      textarea: {\n        height: this.props.rowSpan ? this.props.rowSpan * 25 : 60,\n      },\n    };\n  }\n\n  prepareRootProps() {\n    const defaultProps = {\n      style: this.getStyle().textarea,\n    };\n    return computeProps(this.props, defaultProps);\n  }\n  render() {\n    return (\n      <TextInput\n        ref={(c) => {\n          this._textInput = c;\n          this._root = c;\n        }}\n        {...this.prepareRootProps()}\n        multiline\n        placeholderTextColor={\n          this.props.placeholderTextColor\n            ? this.props.placeholderTextColor\n            : variables.inputColorPlaceholder\n        }\n        underlineColorAndroid=\"rgba(0,0,0,0)\"\n        editable={!this.props.disabled}\n      />\n    );\n  }\n}\n\nTextarea.propTypes = {\n  ...TextInput.propTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array,\n  ]),\n  rowSpan: PropTypes.number,\n  bordered: PropTypes.bool,\n  underline: PropTypes.bool,\n};\n\nconst StyledTextarea = connectStyle(\n  'NativeBase.Textarea',\n  {},\n  mapPropsToStyleNames,\n)(Textarea);\n\nexport {StyledTextarea as Textarea};\n"],"file":"Textarea.js"}