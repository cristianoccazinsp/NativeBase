{"version":3,"sources":["../../../src/basic/SwipeRow.js"],"names":["PREVIEW_OPEN_DELAY","PREVIEW_CLOSE_DELAY","SwipeRow","props","horizontalSwipeGestureBegan","swipeInitialX","parentScrollEnabled","ranPreview","state","dimensionsSet","hiddenHeight","hiddenWidth","_translateX","Animated","Value","_panResponder","PanResponder","create","onMoveShouldSetPanResponder","e","gs","handleOnMoveShouldSetPanResponder","onPanResponderMove","handlePanResponderMove","onPanResponderRelease","handlePanResponderEnd","onPanResponderTerminate","onShouldBlockNativeResponder","_","toValue","delay","timing","duration","previewDuration","useNativeDriver","setState","recalculateHiddenLayout","nativeEvent","layout","height","width","preview","previewOpenValue","rightOpenValue","getPreviewAnimation","start","dx","Math","abs","directionalDistanceChangeThreshold","gestureState","dy","absDx","absDy","setScrollEnabled","_value","swipeGestureBegan","newDX","disableLeftSwipe","disableRightSwipe","stopLeftSwipe","stopRightSwipe","setValue","leftOpenValue","swipeToOpenPercent","manuallySwipeRow","spring","friction","tension","onRowDidClose","onRowDidOpen","onRowClose","onRowOpen","panHandlers","transform","translateX","zIndex","list","style","body","backgroundColor","onContentLayout","undefined","styles","hidden","flex","flexDirection","justifyContent","left","right","renderMainContent","Component","defaultProps","closeOnRowPress","container","bottom","overflow","position","top","StyledSwipeRow","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Animated, PanResponder, View } from 'react-native';\n\nimport { connectStyle } from '../theme/shoutem';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nimport { Left } from './Left';\nimport { Right } from './Right';\nimport { Body } from './Body';\nimport { ListItem } from './ListItem';\n\nconst PREVIEW_OPEN_DELAY = 700;\nconst PREVIEW_CLOSE_DELAY = 300;\n\nclass SwipeRow extends Component {\n  static defaultProps = {\n    leftOpenValue: 0,\n    rightOpenValue: 0,\n    closeOnRowPress: true,\n    disableLeftSwipe: false,\n    disableRightSwipe: false,\n    recalculateHiddenLayout: false,\n    preview: false,\n    previewDuration: 300,\n    directionalDistanceChangeThreshold: 2,\n    swipeToOpenPercent: 50\n  };\n  constructor(props) {\n    super(props);\n    this.horizontalSwipeGestureBegan = false;\n    this.swipeInitialX = null;\n    this.parentScrollEnabled = true;\n    this.ranPreview = false;\n    this.state = {\n      dimensionsSet: false,\n      hiddenHeight: 0,\n      hiddenWidth: 0\n    };\n    this._translateX = new Animated.Value(0);\n  }\n\n  componentDidMount() {\n    this._panResponder = PanResponder.create({\n      onMoveShouldSetPanResponder: (e, gs) =>\n        this.handleOnMoveShouldSetPanResponder(e, gs),\n      onPanResponderMove: (e, gs) => this.handlePanResponderMove(e, gs),\n      onPanResponderRelease: (e, gs) => this.handlePanResponderEnd(e, gs),\n      onPanResponderTerminate: (e, gs) => this.handlePanResponderEnd(e, gs),\n      onShouldBlockNativeResponder: _ => false\n    });\n  }\n\n  getPreviewAnimation(toValue, delay) {\n    return Animated.timing(this._translateX, {\n      duration: this.props.previewDuration,\n      toValue,\n      delay,\n      useNativeDriver: true\n    });\n  }\n\n  onContentLayout(e) {\n    this.setState({\n      dimensionsSet: !this.props.recalculateHiddenLayout,\n      hiddenHeight: e.nativeEvent.layout.height,\n      hiddenWidth: e.nativeEvent.layout.width\n    });\n\n    if (this.props.preview && !this.ranPreview) {\n      this.ranPreview = true;\n      const previewOpenValue =\n        this.props.previewOpenValue || this.props.rightOpenValue * 0.5;\n      this.getPreviewAnimation(previewOpenValue, PREVIEW_OPEN_DELAY).start(\n        _ => {\n          this.getPreviewAnimation(0, PREVIEW_CLOSE_DELAY).start();\n        }\n      );\n    }\n  }\n\n  handleOnMoveShouldSetPanResponder(e, gs) {\n    const { dx } = gs;\n    return Math.abs(dx) > this.props.directionalDistanceChangeThreshold;\n  }\n\n  handlePanResponderMove(e, gestureState) {\n    const { dx, dy } = gestureState;\n    const absDx = Math.abs(dx);\n    const absDy = Math.abs(dy);\n\n    // this check may not be necessary because we don't capture the move until we pass the threshold\n    // just being extra safe here\n    if (\n      absDx > this.props.directionalDistanceChangeThreshold ||\n      absDy > this.props.directionalDistanceChangeThreshold\n    ) {\n      // we have enough to determine direction\n      if (absDy > absDx && !this.horizontalSwipeGestureBegan) {\n        // user is moving vertically, do nothing, listView will handle\n        return;\n      }\n\n      // user is moving horizontally\n      if (this.parentScrollEnabled) {\n        // disable scrolling on the listView parent\n        this.parentScrollEnabled = false;\n        this.props.setScrollEnabled && this.props.setScrollEnabled(false);\n      }\n\n      if (this.swipeInitialX === null) {\n        // set tranlateX value when user started swiping\n        this.swipeInitialX = this._translateX._value;\n      }\n      if (!this.horizontalSwipeGestureBegan) {\n        this.horizontalSwipeGestureBegan = true;\n        this.props.swipeGestureBegan && this.props.swipeGestureBegan();\n      }\n\n      let newDX = this.swipeInitialX + dx;\n      if (this.props.disableLeftSwipe && newDX < 0) {\n        newDX = 0;\n      }\n      if (this.props.disableRightSwipe && newDX > 0) {\n        newDX = 0;\n      }\n\n      if (this.props.stopLeftSwipe && newDX > this.props.stopLeftSwipe) {\n        newDX = this.props.stopLeftSwipe;\n      }\n      if (this.props.stopRightSwipe && newDX < this.props.stopRightSwipe) {\n        newDX = this.props.stopRightSwipe;\n      }\n\n      this._translateX.setValue(newDX);\n    }\n  }\n\n  handlePanResponderEnd(e, gestureState) {\n    // re-enable scrolling on listView parent\n    if (!this.parentScrollEnabled) {\n      this.parentScrollEnabled = true;\n      this.props.setScrollEnabled && this.props.setScrollEnabled(true);\n    }\n\n    // finish up the animation\n    let toValue = 0;\n    if (this._translateX._value >= 0) {\n      // trying to open right\n      if (\n        this._translateX._value >\n        this.props.leftOpenValue * (this.props.swipeToOpenPercent / 100)\n      ) {\n        // we're more than halfway\n        toValue = this.props.leftOpenValue;\n      }\n    } else {\n      // trying to open left\n      if (\n        this._translateX._value <\n        this.props.rightOpenValue * (this.props.swipeToOpenPercent / 100)\n      ) {\n        // we're more than halfway\n        toValue = this.props.rightOpenValue;\n      }\n    }\n\n    this.manuallySwipeRow(toValue);\n  }\n\n  /*\n   * This method is called by SwipeListView\n   */\n  closeRow() {\n    this.manuallySwipeRow(0);\n  }\n\n  openLeftRow() {\n    this.manuallySwipeRow(this.props.leftOpenValue);\n  }\n\n  openRightRow() {\n    this.manuallySwipeRow(this.props.rightOpenValue);\n  }\n\n  manuallySwipeRow(toValue) {\n    Animated.spring(this._translateX, {\n      toValue,\n      friction: this.props.friction,\n      tension: this.props.tension,\n      useNativeDriver: true\n    }).start(_ => {\n      if (toValue === 0) {\n        this.props.onRowDidClose && this.props.onRowDidClose();\n      } else {\n        this.props.onRowDidOpen && this.props.onRowDidOpen();\n      }\n    });\n\n    if (toValue === 0) {\n      this.props.onRowClose && this.props.onRowClose();\n    } else {\n      this.props.onRowOpen && this.props.onRowOpen(toValue);\n    }\n\n    // reset everything\n    this.swipeInitialX = null;\n    this.horizontalSwipeGestureBegan = false;\n  }\n\n  renderMainContent() {\n    // We do this annoying if statement for performance.\n    // We don't want the onLayout func to run after it runs once.\n    if (this.state.dimensionsSet) {\n      return (\n        <Animated.View\n          {...this._panResponder.panHandlers}\n          style={{\n            transform: [{ translateX: this._translateX }],\n            zIndex: 2\n          }}\n        >\n          {!this.props.list ? (\n            <ListItem list style={this.props.style}>\n              {this.props.body}\n            </ListItem>\n          ) : (\n            <View style={[{ backgroundColor: '#FFF' }, this.props.style]}>\n              {this.props.body}\n            </View>\n          )}\n        </Animated.View>\n      );\n    }\n    return (\n      <Animated.View\n        {...this._panResponder.panHandlers}\n        onLayout={e => this.onContentLayout(e)}\n        style={{\n          transform: [{ translateX: this._translateX }],\n          zIndex: 2\n        }}\n      >\n        {!this.props.list ? (\n          <ListItem list style={this.props.style}>\n            {this.props.body}\n          </ListItem>\n        ) : (\n          <View style={[{ backgroundColor: '#FFF' }, this.props.style]}>\n            {this.props.body}\n          </View>\n        )}\n      </Animated.View>\n    );\n  }\n\n  render() {\n    return (\n      <View style={this.props.style ? this.props.style : undefined}>\n        <View\n          style={[\n            styles.hidden,\n            {\n              height: this.state.hiddenHeight,\n              flex: 1,\n              flexDirection: 'row',\n              justifyContent: 'space-between'\n            }\n          ]}\n        >\n          <Left style={{ width: this.props.leftOpenValue, zIndex: 1 }}>\n            {this.props.left}\n          </Left>\n          <Body style={{ flex: 0 }} />\n          <Right style={{ width: -this.props.rightOpenValue, zIndex: 1 }}>\n            {this.props.right}\n          </Right>\n        </View>\n        {this.renderMainContent()}\n      </View>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    // As of RN 0.29 flex: 1 is causing all rows to be the same height\n    // flex: 1\n  },\n  hidden: {\n    bottom: 0,\n    left: 0,\n    overflow: 'hidden',\n    position: 'absolute',\n    right: 0,\n    top: 0\n  }\n};\n\nconst StyledSwipeRow = connectStyle(\n  'NativeBase.SwipeRow',\n  {},\n  mapPropsToStyleNames\n)(SwipeRow);\nexport { StyledSwipeRow as SwipeRow };\n"],"file":"SwipeRow.js"}