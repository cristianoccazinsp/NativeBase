{"version":3,"sources":["../../../src/basic/Header.js"],"names":["Header","props","androidStatusBarColor","iosBarStyle","style","transparent","translucent","variables","context","theme","variable","platformStyle","statusBarColor","iosStatusbar","backgroundColor","c","_root","Component","contextTypes","PropTypes","object","propTypes","ViewPropTypes","oneOfType","number","array","searchBar","bool","rounded","StyledHeader","mapPropsToStyleNames"],"mappings":"4sBAAA,6DACA,qDACA,yCAEA,yCACA,2FACA,mEACA,6E,mzDAEMA,CAAAA,M,uPAKJ,iBAAS,gBACP,gBAMI,KAAKC,KANT,CACEC,qBADF,aACEA,qBADF,CAEEC,WAFF,aAEEA,WAFF,CAGEC,KAHF,aAGEA,KAHF,CAIEC,WAJF,aAIEA,WAJF,CAKEC,WALF,aAKEA,WALF,CAQA,GAAMC,CAAAA,SAAS,CAAG,KAAKC,OAAL,CAAaC,KAAb,CACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADnC,CAEdG,iBAFJ,CAIA,GAAMC,CAAAA,aAAa,CAAGJ,SAAS,CAACI,aAAhC,CAEA,MACE,8BAAC,iBAAD,6EACE,6BAAC,sBAAD,EACE,eAAe,CACbT,qBAAqB,CACjBA,qBADiB,CAEjBK,SAAS,CAACK,cAJlB,CAME,QAAQ,CACNT,WAAW,CACPA,WADO,CAEPQ,aAAa,GAAK,UAAlB,CACA,eADA,CAEAJ,SAAS,CAACM,YAXlB,CAaE,WAAW,CAAER,WAAW,CAAG,IAAH,CAAUC,WAbpC,4EADF,CAgBE,6BAAC,yBAAD,EACE,KAAK,CAAE,CACLQ,eAAe,CAAE,sBAASV,KAAT,EAAgBU,eAD5B,CADT,4EAIE,6BAAC,iBAAD,wBAAM,GAAG,CAAE,aAACC,CAAD,QAAQ,CAAA,KAAI,CAACC,KAAL,CAAaD,CAArB,EAAX,EAAwC,KAAKd,KAA7C,+EAJF,CAhBF,CADF,CAyBD,C,oBA7CkBgB,gB,EAAfjB,M,CACGkB,Y,CAAe,CACpBT,KAAK,CAAEU,mBAAUC,MADG,C,CA+CxBpB,MAAM,CAACqB,SAAP,0BACKC,0BADL,EAEElB,KAAK,CAAEe,mBAAUI,SAAV,CAAoB,CACzBJ,mBAAUC,MADe,CAEzBD,mBAAUK,MAFe,CAGzBL,mBAAUM,KAHe,CAApB,CAFT,CAOEC,SAAS,CAAEP,mBAAUQ,IAPvB,CAQEC,OAAO,CAAET,mBAAUQ,IARrB,GAWA,GAAME,CAAAA,YAAY,CAAG,0BACnB,mBADmB,CAEnB,EAFmB,CAGnBC,6BAHmB,EAInB9B,MAJmB,CAArB,C","sourcesContent":["import PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {View, StatusBar, ViewPropTypes, SafeAreaView} from 'react-native';\n\nimport {connectStyle} from '../theme/shoutem';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport getStyle from '../utils/getStyle';\nimport variable from '../theme/variables/platform';\n\nclass Header extends Component {\n  static contextTypes = {\n    theme: PropTypes.object,\n  };\n\n  render() {\n    const {\n      androidStatusBarColor,\n      iosBarStyle,\n      style,\n      transparent,\n      translucent,\n    } = this.props;\n\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n\n    const platformStyle = variables.platformStyle;\n\n    return (\n      <View>\n        <StatusBar\n          backgroundColor={\n            androidStatusBarColor\n              ? androidStatusBarColor\n              : variables.statusBarColor\n          }\n          barStyle={\n            iosBarStyle\n              ? iosBarStyle\n              : platformStyle === 'material'\n              ? 'light-content'\n              : variables.iosStatusbar\n          }\n          translucent={transparent ? true : translucent}\n        />\n        <SafeAreaView\n          style={{\n            backgroundColor: getStyle(style).backgroundColor,\n          }}>\n          <View ref={(c) => (this._root = c)} {...this.props} />\n        </SafeAreaView>\n      </View>\n    );\n  }\n}\n\nHeader.propTypes = {\n  ...ViewPropTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array,\n  ]),\n  searchBar: PropTypes.bool,\n  rounded: PropTypes.bool,\n};\n\nconst StyledHeader = connectStyle(\n  'NativeBase.Header',\n  {},\n  mapPropsToStyleNames,\n)(Header);\nexport {StyledHeader as Header};\n"],"file":"Header.js"}