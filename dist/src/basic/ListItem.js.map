{"version":3,"sources":["../../../src/basic/ListItem.js"],"names":["ListItem","variables","context","theme","variable","Platform","OS","androidRipple","props","onPress","onLongPress","Version","c","_root","listBtnUnderlayColor","touchableHighlightStyle","undefined","children","marginLeft","paddingLeft","Component","contextTypes","PropTypes","object","propTypes","TouchableHighlight","style","oneOfType","number","array","itemDivider","bool","button","StyledListItem","mapPropsToStyleNames"],"mappings":"8sBAAA,qDACA,6DACA,yCAOA,yCACA,2FACA,6E,qzDAEMA,CAAAA,Q,iQAIJ,iBAAS,gBACP,GAAMC,CAAAA,SAAS,CAAG,KAAKC,OAAL,CAAaC,KAAb,CACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADnC,CAEdG,iBAFJ,CAIA,GACEC,sBAASC,EAAT,GAAgB,KAAhB,EACAD,sBAASC,EAAT,GAAgB,KADhB,EAEAL,SAAS,CAACM,aAAV,GAA4B,KAF5B,EAGC,CAAC,KAAKC,KAAL,CAAWC,OAAZ,EAAuB,CAAC,KAAKD,KAAL,CAAWE,WAHpC,EAIAL,sBAASM,OAAT,EAAoB,EALtB,CAME,CACA,MACE,8BAAC,+BAAD,wBACE,OAAO,CAAE,KAAKH,KAAL,CAAWC,OADtB,CAEE,WAAW,CAAE,KAAKD,KAAL,CAAWE,WAF1B,CAGE,GAAG,CAAE,aAACE,CAAD,QAAQ,CAAA,KAAI,CAACC,KAAL,CAAaD,CAArB,EAHP,CAIE,aAAa,CAAEX,SAAS,CAACa,oBAJ3B,EAKM,KAAKN,KALX,EAME,KAAK,CAAE,KAAKA,KAAL,CAAWO,uBANpB,6EAOE,6BAAC,iBAAD,0BAAU,KAAKP,KAAf,EAAsB,MAAM,CAAEQ,SAA9B,8EACG,KAAKR,KAAL,CAAWS,QADd,CAPF,CADF,CAaD,CACD,MACE,8BAAC,oCAAD,wBAAyB,GAAG,CAAE,aAACL,CAAD,QAAQ,CAAA,KAAI,CAACC,KAAL,CAAaD,CAArB,EAA9B,EAA2D,KAAKJ,KAAhE,8EACE,6BAAC,iBAAD,EAAM,KAAK,CAAE,CAACU,UAAU,CAAE,CAAC,EAAd,CAAkBC,WAAW,CAAE,EAA/B,CAAb,4EACE,6BAAC,iBAAD,0BAAU,KAAKX,KAAf,EAAsB,MAAM,CAAEQ,SAA9B,8EACG,KAAKR,KAAL,CAAWS,QADd,CADF,CADF,CADF,CASD,C,sBAvCoBG,gB,EAAjBpB,Q,CACGqB,Y,CAAe,CACpBlB,KAAK,CAAEmB,mBAAUC,MADG,C,CAyCxBvB,QAAQ,CAACwB,SAAT,0BACKC,gCAAmBD,SADxB,EAEEE,KAAK,CAAEJ,mBAAUK,SAAV,CAAoB,CACzBL,mBAAUC,MADe,CAEzBD,mBAAUM,MAFe,CAGzBN,mBAAUO,KAHe,CAApB,CAFT,CAOEd,uBAAuB,CAAEO,mBAAUK,SAAV,CAAoB,CAC3CL,mBAAUC,MADiC,CAE3CD,mBAAUO,KAFiC,CAApB,CAP3B,CAWEC,WAAW,CAAER,mBAAUS,IAXzB,CAYEC,MAAM,CAAEV,mBAAUS,IAZpB,GAeA,GAAME,CAAAA,cAAc,CAAG,0BACrB,qBADqB,CAErB,EAFqB,CAGrBC,6BAHqB,EAIrBlC,QAJqB,CAAvB,C","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TouchableHighlight,\n  Platform,\n  TouchableNativeFeedback,\n  View,\n} from 'react-native';\n\nimport {connectStyle} from '../theme/shoutem';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport variable from '../theme/variables/platform';\n\nclass ListItem extends Component {\n  static contextTypes = {\n    theme: PropTypes.object,\n  };\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n\n    if (\n      Platform.OS === 'ios' ||\n      Platform.OS === 'web' ||\n      variables.androidRipple === false ||\n      (!this.props.onPress && !this.props.onLongPress) ||\n      Platform.Version <= 21\n    ) {\n      return (\n        <TouchableHighlight\n          onPress={this.props.onPress}\n          onLongPress={this.props.onLongPress}\n          ref={(c) => (this._root = c)}\n          underlayColor={variables.listBtnUnderlayColor}\n          {...this.props}\n          style={this.props.touchableHighlightStyle}>\n          <View {...this.props} testID={undefined}>\n            {this.props.children}\n          </View>\n        </TouchableHighlight>\n      );\n    }\n    return (\n      <TouchableNativeFeedback ref={(c) => (this._root = c)} {...this.props}>\n        <View style={{marginLeft: -17, paddingLeft: 17}}>\n          <View {...this.props} testID={undefined}>\n            {this.props.children}\n          </View>\n        </View>\n      </TouchableNativeFeedback>\n    );\n  }\n}\n\nListItem.propTypes = {\n  ...TouchableHighlight.propTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array,\n  ]),\n  touchableHighlightStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  itemDivider: PropTypes.bool,\n  button: PropTypes.bool,\n};\n\nconst StyledListItem = connectStyle(\n  'NativeBase.ListItem',\n  {},\n  mapPropsToStyleNames,\n)(ListItem);\n\nexport {StyledListItem as ListItem};\n"],"file":"ListItem.js"}