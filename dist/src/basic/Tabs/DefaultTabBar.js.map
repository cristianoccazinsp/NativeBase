{"version":3,"sources":["../../../../src/basic/Tabs/DefaultTabBar.js"],"names":["ReactNative","require","StyleSheet","View","Animated","Platform","Button","DefaultTabBar","propTypes","goToPage","PropTypes","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","disabledTextColor","tabStyle","ViewPropTypes","style","renderTab","underlineStyle","tabContainerStyle","contextTypes","theme","object","getDefaultProps","variable","topTabBarActiveTextColor","topTabBarTextColor","tabBarDisabledTextColor","tabFontSize","renderTabOption","name","page","isTabActive","onPressHandler","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","disabled","headerContent","props","children","undefined","fontWeight","isDisabled","textColor","color","flex","fontSize","_","random","render","variables","context","platformStyle","containerWidth","numberOfTabs","length","tabUnderlineStyle","position","width","height","topTabBarActiveBorderColor","bottom","left","scrollValue","interpolate","inputRange","outputRange","tabDefaultBg","map","StyledTab","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport createReactClass from 'create-react-class';\nimport _ from 'lodash';\n\nimport { connectStyle } from '../../theme/shoutem';\nimport mapPropsToStyleNames from '../../utils/mapPropsToStyleNames';\nimport variable from './../../theme/variables/platform';\nimport { TabHeading } from '../TabHeading';\nimport { Text } from '../Text';\nimport { TabContainer } from '../TabContainer';\nimport { ViewPropTypes } from '../../utils';\nconst ReactNative = require('react-native');\n\nconst { StyleSheet, View, Animated, Platform } = ReactNative;\nconst Button = require('./Button');\n\nconst DefaultTabBar = createReactClass({\n  propTypes: {\n    goToPage: PropTypes.func,\n    activeTab: PropTypes.number,\n    tabs: PropTypes.array,\n    backgroundColor: PropTypes.string,\n    activeTextColor: PropTypes.string,\n    inactiveTextColor: PropTypes.string,\n    disabledTextColor: PropTypes.string,\n    tabStyle: ViewPropTypes.style,\n    renderTab: PropTypes.func,\n    underlineStyle: ViewPropTypes.style,\n    tabContainerStyle: ViewPropTypes.style\n  },\n  contextTypes: {\n    theme: PropTypes.object\n  },\n\n  getDefaultProps() {\n    return {\n      activeTextColor: variable.topTabBarActiveTextColor,\n      inactiveTextColor: variable.topTabBarTextColor,\n      disabledTextColor: variable.tabBarDisabledTextColor,\n      backgroundColor: 'transparent',\n      tabFontSize: variable.tabFontSize\n    };\n  },\n\n  renderTabOption(name, page) {},\n\n  renderTab(\n    name,\n    page,\n    isTabActive,\n    onPressHandler,\n    tabStyle,\n    activeTabStyle,\n    textStyle,\n    activeTextStyle,\n    tabHeaderStyle,\n    tabFontSize,\n    disabled,\n    disabledTextColor\n  ) {\n    const headerContent =\n      typeof name !== 'string' ? name.props.children : undefined;\n    const { activeTextColor, inactiveTextColor } = this.props;\n    const fontWeight = isTabActive ? 'bold' : 'normal';\n    const isDisabled = disabled !== undefined;\n    let textColor;\n    if (isDisabled) {\n      textColor = disabledTextColor;\n    } else if (isTabActive) {\n      textColor = activeTextStyle ? activeTextStyle.color : activeTextColor; // activeTextColor: default color for active Tab\n    } else {\n      textColor = textStyle ? textStyle.color : inactiveTextColor; // inactiveTextColor: default color for inactive Tab\n    }\n\n    if (typeof name === 'string') {\n      return (\n        <Button\n          style={{ flex: 1 }}\n          disabled={isDisabled}\n          key={name}\n          onPress={() => onPressHandler(page)}\n        >\n          <TabHeading\n            style={isTabActive ? activeTabStyle : tabStyle}\n            active={isTabActive}\n          >\n            <Text\n              style={[\n                { fontSize: tabFontSize },\n                isTabActive ? activeTextStyle : textStyle,\n                { color: textColor }\n              ]}\n            >\n              {name}\n            </Text>\n          </TabHeading>\n        </Button>\n      );\n    }\n    return (\n      <Button\n        style={{ flex: 1 }}\n        disabled={isDisabled}\n        key={_.random(1.2, 5.2)}\n        onPress={() => onPressHandler(page)}\n      >\n        <TabHeading style={tabHeaderStyle} active={isTabActive}>\n          {headerContent}\n        </TabHeading>\n      </Button>\n    );\n  },\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n    const platformStyle = variables.platformStyle;\n    const containerWidth = this.props.containerWidth;\n    const numberOfTabs = this.props.tabs.length;\n    const tabUnderlineStyle = {\n      position: 'absolute',\n      width: containerWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n\n    const left = this.props.scrollValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, containerWidth / numberOfTabs]\n    });\n    return (\n      <TabContainer\n        style={[\n          { backgroundColor: variables.tabDefaultBg },\n          this.props.tabContainerStyle ? this.props.tabContainerStyle : {}\n        ]}\n      >\n        {this.props.tabs.map((name, page) => {\n          const isTabActive = this.props.activeTab === page;\n          const renderTab = this.props.renderTab || this.renderTab;\n          return renderTab(\n            name,\n            page,\n            isTabActive,\n            this.props.goToPage,\n            this.props.tabStyle[page],\n            this.props.activeTabStyle[page],\n            this.props.textStyle[page],\n            this.props.activeTextStyle[page],\n            this.props.tabHeaderStyle[page],\n            variables.tabFontSize,\n            this.props.disabled[page],\n            this.props.disabledTextColor\n          );\n        })}\n        <Animated.View\n          style={[tabUnderlineStyle, { left }, this.props.underlineStyle]}\n        />\n      </TabContainer>\n    );\n  }\n});\n\n// module.exports = DefaultTabBar;\nconst StyledTab = connectStyle(\n  'NativeBase.DefaultTabBar',\n  {},\n  mapPropsToStyleNames\n)(DefaultTabBar);\nexport { StyledTab as DefaultTabBar };\n"],"file":"DefaultTabBar.js"}