{"version":3,"sources":["../../../src/basic/H3.js"],"names":["H3","c","_root","props","Component","childrenType","propName","component","error","prop","React","Children","forEach","child","Error","propTypes","Text","children","style","PropTypes","oneOfType","object","number","array","StyledH3","mapPropsToStyleNames"],"mappings":"wsBAAA,qDACA,6DACA,yCAEA,yCACA,2F,+yDAEMA,CAAAA,E,mOACJ,iBAAS,gBACP,MAAO,8BAAC,iBAAD,wBAAM,GAAG,CAAE,aAACC,CAAD,QAAQ,CAAA,KAAI,CAACC,KAAL,CAAaD,CAArB,EAAX,EAAwC,KAAKE,KAA7C,+EAAP,CACD,C,gBAHcC,gB,EAMjB,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAUF,KAAV,CAAiBG,QAAjB,CAA2BC,SAA3B,CAAsC,CACzD,GAAIC,CAAAA,KAAJ,CACA,GAAMC,CAAAA,IAAI,CAAGN,KAAK,CAACG,QAAD,CAAlB,CACAI,eAAMC,QAAN,CAAeC,OAAf,CAAuBH,IAAvB,CAA6B,SAACI,KAAD,CAAW,CACtC,GAAI,MAAOA,CAAAA,KAAP,GAAiB,QAAjB,EAA6B,MAAOA,CAAAA,KAAP,GAAiB,QAAlD,CAA4D,CAC1DL,KAAK,CAAG,GAAIM,CAAAA,KAAJ,CAAaP,SAAb,sCAAR,CACD,CACF,CAJD,EAKA,MAAOC,CAAAA,KAAP,CACD,CATD,CAWAR,EAAE,CAACe,SAAH,0BACKC,kBAAKD,SADV,EAEEE,QAAQ,CAAEZ,YAFZ,CAGEa,KAAK,CAAEC,mBAAUC,SAAV,CAAoB,CACzBD,mBAAUE,MADe,CAEzBF,mBAAUG,MAFe,CAGzBH,mBAAUI,KAHe,CAApB,CAHT,GAUA,GAAMC,CAAAA,QAAQ,CAAG,0BAAa,eAAb,CAA8B,EAA9B,CAAkCC,6BAAlC,EAAwDzB,EAAxD,CAAjB,C","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Text} from 'react-native';\n\nimport {connectStyle} from '../theme/shoutem';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nclass H3 extends Component {\n  render() {\n    return <Text ref={(c) => (this._root = c)} {...this.props} />;\n  }\n}\n\nconst childrenType = function (props, propName, component) {\n  let error;\n  const prop = props[propName];\n  React.Children.forEach(prop, (child) => {\n    if (typeof child !== 'string' && typeof child !== 'number') {\n      error = new Error(`${component} should have only string or number`);\n    }\n  });\n  return error;\n};\n\nH3.propTypes = {\n  ...Text.propTypes,\n  children: childrenType,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array,\n  ]),\n};\n\nconst StyledH3 = connectStyle('NativeBase.H3', {}, mapPropsToStyleNames)(H3);\n\nexport {StyledH3 as H3};\n"],"file":"H3.js"}