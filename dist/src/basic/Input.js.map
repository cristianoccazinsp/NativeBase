{"version":3,"sources":["../../../src/basic/Input.js"],"names":["Input","variables","context","theme","variable","_textInput","c","_root","props","disabled","placeholderTextColor","inputColorPlaceholder","React","Component","contextTypes","PropTypes","object","propTypes","TextInput","style","oneOfType","number","array","StyledInput","mapPropsToStyleNames"],"mappings":"q1BAAA,4B,2CACA,qC,mDACA,yCAEA,yCACA,mE,yEACA,qD,q7BAGMA,M,mRAKK,iBACP,GAAMC,WAAY,KAAKC,OAAL,CAAaC,KAAb,CACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADnC,CAEdG,kBAFJ,CAGA,MACE,+BAAC,sBAAD,WACE,IAAK,eAAK,CACR,OAAKC,UAAL,CAAkBC,CAAlB,CACA,OAAKC,KAAL,CAAaD,CAAb,CACD,CAJH,CAKE,SAAU,CAAC,KAAKE,KAAL,CAAWC,QALxB,CAME,sBAAsB,eANxB,CAOE,qBACE,KAAKD,KAAL,CAAWE,oBAAX,CACI,KAAKF,KAAL,CAAWE,oBADf,CAEIT,UAAUU,qBAVlB,EAYM,KAAKH,KAZX,mDADF,CAgBD,C,mBAzBiBI,gBAAMC,S,EAApBb,K,CACGc,Y,CAAe,CACpBX,MAAOY,oBAAUC,MADG,C,CA2BxBhB,MAAMiB,SAAN,aACKC,uBAAUD,SADf,EAEEE,MAAOJ,oBAAUK,SAAV,CAAoB,CACzBL,oBAAUC,MADe,CAEzBD,oBAAUM,MAFe,CAGzBN,oBAAUO,KAHe,CAApB,CAFT,GASA,GAAMC,aAAc,0BAAa,kBAAb,CAAiC,EAAjC,CAAqCC,8BAArC,EAClBxB,KADkB,CAApB,C,QAIwBA,K,CAAfuB,W","file":"Input.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextInput } from 'react-native';\n\nimport { connectStyle } from '../theme/shoutem';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport variable from '../theme/variables/platform';\n\n\nclass Input extends React.Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n    return (\n      <TextInput\n        ref={c => {\n          this._textInput = c;\n          this._root = c;\n        }}\n        editable={!this.props.disabled}\n        underlineColorAndroid=\"rgba(0,0,0,0)\"\n        placeholderTextColor={\n          this.props.placeholderTextColor\n            ? this.props.placeholderTextColor\n            : variables.inputColorPlaceholder\n        }\n        {...this.props}\n      />\n    );\n  }\n}\n\nInput.propTypes = {\n  ...TextInput.propTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ])\n};\n\nconst StyledInput = connectStyle('NativeBase.Input', {}, mapPropsToStyleNames)(\n  Input\n);\n\nexport { StyledInput as Input };\n"]}